   1               		.file	"chthreads.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.__thd_object_init,"ax",@progbits
  11               	.global	__thd_object_init
  13               	__thd_object_init:
  14               	.LFB195:
  15               		.file 1 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c"
   1:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*
   2:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
   5:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     This file is part of ChibiOS.
   6:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
   7:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     ChibiOS is free software; you can redistribute it and/or modify
   8:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     it under the terms of the GNU General Public License as published by
   9:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     the Free Software Foundation version 3 of the License.
  10:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  11:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     GNU General Public License for more details.
  15:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  16:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     You should have received a copy of the GNU General Public License
  17:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** */
  19:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  20:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
  21:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @file    rt/src/chthreads.c
  22:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Threads code.
  23:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
  24:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @addtogroup threads
  25:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details Threads related APIs and services.
  26:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          <h2>Operation mode</h2>
  27:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          A thread is an abstraction of an independent instructions flow.
  28:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          In ChibiOS/RT a thread is represented by a "C" function owning
  29:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          a processor context, state informations and a dedicated stack
  30:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          area. In this scenario static variables are shared among all
  31:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          threads while automatic variables are local to the thread.<br>
  32:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          Operations defined for threads:
  33:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>Create</b>, a thread is started on the specified thread
  34:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            function. This operation is available in multiple variants,
  35:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            both static and dynamic.
  36:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>Exit</b>, a thread terminates by returning from its top
  37:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            level function or invoking a specific API, the thread can
  38:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            return a value that can be retrieved by other threads.
  39:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>Wait</b>, a thread waits for the termination of another
  40:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            thread and retrieves its return value.
  41:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>Resume</b>, a thread created in suspended state is started.
  42:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>Sleep</b>, the execution of a thread is suspended for the
  43:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            specified amount of time or the specified future absolute time
  44:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *            is reached.
  45:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>SetPriority</b>, a thread changes its own priority level.
  46:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          - <b>Yield</b>, a thread voluntarily renounces to its time slot.
  47:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          .
  48:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @{
  49:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
  50:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  51:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #include "ch.h"
  52:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  53:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  54:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /* Module local definitions.                                                 */
  55:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  56:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  57:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  58:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /* Module exported variables.                                                */
  59:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  60:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  61:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  62:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /* Module local types.                                                       */
  63:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  64:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  65:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  66:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /* Module local variables.                                                   */
  67:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  68:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  69:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  70:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /* Module local functions.                                                   */
  71:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  72:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  73:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  74:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /* Module exported functions.                                                */
  75:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /*===========================================================================*/
  76:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  77:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
  78:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Initializes a thread structure.
  79:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    This is an internal functions, do not use it in application code.
  80:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
  81:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] oip       pointer to the OS instance
  82:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
  83:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] name      thread name
  84:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] prio      the priority level for the new thread
  85:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The same thread pointer passed as parameter.
  86:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
  87:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @notapi
  88:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
  89:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *__thd_object_init(os_instance_t *oip,
  90:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****                             thread_t *tp,
  91:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****                             const char *name,
  92:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****                             tprio_t prio) {
  16               		.loc 1 92 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 FB01      		movw r30,r22
  93:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->hdr.pqueue.prio   = prio;
  32               		.loc 1 94 0
  33 0006 2483      		std Z+4,r18
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->state             = CH_STATE_WTSTART;
  34               		.loc 1 95 0
  35 0008 32E0      		ldi r19,lo8(2)
  36 000a 3787      		std Z+15,r19
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->flags             = CH_FLAG_MODE_STATIC;
  37               		.loc 1 96 0
  38 000c 108A      		std Z+16,__zero_reg__
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->owner             = oip;
  39               		.loc 1 97 0
  40 000e 9487      		std Z+12,r25
  41 0010 8387      		std Z+11,r24
  98:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_TIME_QUANTUM > 0
  99:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->ticks             = (tslices_t)CH_CFG_TIME_QUANTUM;
 100:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 101:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_MUTEXES == TRUE
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->realprio          = prio;
  42               		.loc 1 102 0
  43 0012 258F      		std Z+29,r18
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->mtxlist           = NULL;
  44               		.loc 1 103 0
  45 0014 148E      		std Z+28,__zero_reg__
  46 0016 138E      		std Z+27,__zero_reg__
 104:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 105:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_EVENTS == TRUE
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->epending          = (eventmask_t)0;
  47               		.loc 1 106 0
  48 0018 128E      		std Z+26,__zero_reg__
 107:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 108:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_DBG_THREADS_PROFILING == TRUE
 109:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->time              = (systime_t)0;
 110:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 111:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->refs              = (trefs_t)1;
  49               		.loc 1 112 0
  50 001a 21E0      		ldi r18,lo8(1)
  51               	.LVL1:
  52 001c 218B      		std Z+17,r18
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->name              = name;
  53               		.loc 1 113 0
  54 001e 5687      		std Z+14,r21
  55 0020 4587      		std Z+13,r20
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   REG_INSERT(oip, tp);
  56               		.loc 1 114 0
  57 0022 9B01      		movw r18,r22
  58 0024 295F      		subi r18,-7
  59 0026 3F4F      		sbci r19,-1
  60               	.LVL2:
  61 0028 AC01      		movw r20,r24
  62               	.LVL3:
  63 002a 475E      		subi r20,-25
  64 002c 5F4F      		sbci r21,-1
  65               	.LVL4:
  66               	.LBB226:
  67               	.LBB227:
  68               		.file 2 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h"
   1:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*
   2:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
   5:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     This file is part of ChibiOS.
   6:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
   7:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     it under the terms of the GNU General Public License as published by
   9:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     the Free Software Foundation version 3 of the License.
  10:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  11:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     GNU General Public License for more details.
  15:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  16:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     You should have received a copy of the GNU General Public License
  17:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** */
  19:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  20:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  21:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @file    chlists.h
  22:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Lists and Queues header.
  23:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
  24:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @addtogroup os_lists
  25:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @{
  26:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  27:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  28:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #ifndef CHLISTS_H
  29:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #define CHLISTS_H
  30:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  31:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  32:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Module constants.                                                         */
  33:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  34:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  35:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  36:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Module pre-compile time settings.                                         */
  37:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  38:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  39:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  40:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Derived constants and error checks.                                       */
  41:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  42:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  43:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  44:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Module data structures and types.                                         */
  45:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
  46:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  47:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  48:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Type of a generic single link list header and element.
  49:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  50:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** typedef struct ch_list ch_list_t;
  51:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  52:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  53:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Structure representing a generic single link list header
  54:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          and element.
  55:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  56:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** struct ch_list {
  57:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_list_t             *next;      /**< @brief Next in the list/queue.     */
  58:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** };
  59:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  60:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  61:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked list header and element.
  62:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  63:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** typedef struct ch_queue ch_queue_t;
  64:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  65:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  66:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Structure representing a generic bidirectional linked list header
  67:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          and element.
  68:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  69:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** struct ch_queue {
  70:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_queue_t            *next;      /**< @brief Next in the list/queue.     */
  71:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_queue_t            *prev;      /**< @brief Previous in the queue.      */
  72:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** };
  73:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  74:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  75:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Type of a generic priority-ordered bidirectional linked list
  76:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          header and element.
  77:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  78:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** typedef struct ch_priority_queue ch_priority_queue_t;
  79:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  80:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  81:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Structure representing a generic priority-ordered bidirectional
  82:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          linked list header and element.
  83:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @note    Link fields are void pointers in order to avoid aliasing issues.
  84:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  85:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** struct ch_priority_queue {
  86:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_priority_queue_t   *next;      /**< @brief Next in the queue.          */
  87:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_priority_queue_t   *prev;      /**< @brief Previous in the queue.      */
  88:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   tprio_t               prio;       /**< @brief Priority of this element.   */
  89:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** };
  90:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  91:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  92:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Type of a generic bidirectional linked delta list
  93:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          header and element.
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** typedef struct ch_delta_list ch_delta_list_t;
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
  98:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Delta list element and header structure.
  99:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 100:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** struct ch_delta_list {
 101:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_delta_list_t       *next;      /**< @brief Next in the delta list.     */
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_delta_list_t       *prev;      /**< @brief Previous in the delta list. */
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   sysinterval_t         delta;      /**< @brief Time interval from previous.*/
 104:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** };
 105:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
 107:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Module macros.                                                            */
 108:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
 109:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 110:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 111:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Data part of a static queue object initializer.
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @details This macro should be used when statically initializing a
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          queue that is part of a bigger structure.
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 115:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 116:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 117:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #define __CH_QUEUE_DATA(name) {(ch_queue_t *)&name, (ch_queue_t *)&name}
 118:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 119:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 120:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Static queue object initializer.
 121:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @details Statically initialized queues require no explicit
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          initialization using @p queue_init().
 123:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 124:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] name      the name of the queue variable
 125:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 126:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #define CH_QUEUE_DECL(name)                                                 \
 127:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****     ch_queue_t name = __CH_QUEUE_DATA(name)
 128:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 129:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
 130:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* External declarations.                                                    */
 131:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
 132:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 133:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Early function prototypes required by the following headers.*/
 134:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #ifdef __cplusplus
 135:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** extern "C" {
 136:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #endif
 137:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 138:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #ifdef __cplusplus
 139:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 140:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** #endif
 141:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 142:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
 143:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /* Module inline functions.                                                  */
 144:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /*===========================================================================*/
 145:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 146:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 147:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   List initialization.
 148:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 149:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[out] lp       pointer to the list header
 150:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 151:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 152:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 153:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline void ch_list_init(ch_list_t *lp) {
 154:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   lp->next = lp;
 156:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 157:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 158:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 159:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is empty.
 160:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 161:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 162:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The status of the list.
 163:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 164:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 165:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 166:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline bool ch_list_isempty(ch_list_t *lp) {
 167:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 168:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return (bool)(lp->next == lp);
 169:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 170:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 171:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 172:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified list is not empty.
 173:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 174:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] lp        pointer to the list header
 175:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The status of the list.
 176:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 177:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 178:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 179:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline bool ch_list_notempty(ch_list_t *lp) {
 180:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return (bool)(lp->next != lp);
 182:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 183:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 184:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 185:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Pushes an element on top of a stack list.
 186:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 187:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] lp    the pointer to the list header
 188:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] p     the pointer to the element to be inserted in the list
 189:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 190:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 191:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 192:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline void ch_list_link(ch_list_t *lp, ch_list_t *p) {
 193:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 194:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->next = lp->next;
 195:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   lp->next = p;
 196:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 197:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 198:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 199:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Pops an element from the top of a stack list and returns it.
 200:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @pre     The list must be non-empty before calling this function.
 201:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 202:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] lp        the pointer to the list header
 203:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 204:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 205:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 206:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 207:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline ch_list_t *ch_list_unlink(ch_list_t *lp) {
 208:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 209:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_list_t *p = lp->next;
 210:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   lp->next = p->next;
 211:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 212:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return p;
 213:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 214:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 215:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 216:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Queue initialization.
 217:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 218:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[out] qp       pointer to the queue header
 219:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 220:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 221:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 222:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline void ch_queue_init(ch_queue_t *qp) {
 223:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->next = qp;
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev = qp;
 226:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 227:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 228:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 229:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified queue is empty.
 230:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 231:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] qp        pointer to the queue header
 232:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The status of the queue.
 233:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 234:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 235:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 236:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline bool ch_queue_isempty(const ch_queue_t *qp) {
 237:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 238:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return (bool)(qp->next == qp);
 239:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 240:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 241:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 242:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Evaluates to @p true if the specified queue is not empty.
 243:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 244:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] qp        pointer to the queue header
 245:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The status of the queue.
 246:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 247:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 248:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 249:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline bool ch_queue_notempty(const ch_queue_t *qp) {
 250:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return (bool)(qp->next != qp);
 252:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 253:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 254:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 255:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Inserts an element into a queue.
 256:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 257:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] qp        the pointer to the queue header
 258:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] p         the pointer to the element to be inserted in the queue
 259:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 260:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 261:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 262:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline void ch_queue_insert(ch_queue_t *qp, ch_queue_t *p) {
 263:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->next       = qp;
  69               		.loc 2 264 0
  70 002e 5087      		std Z+8,r21
  71 0030 4783      		std Z+7,r20
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev       = qp->prev;
  72               		.loc 2 265 0
  73 0032 EC01      		movw r28,r24
  74 0034 AB8D      		ldd r26,Y+27
  75 0036 BC8D      		ldd r27,Y+28
  76 0038 B287      		std Z+10,r27
  77 003a A187      		std Z+9,r26
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev->next = p;
  78               		.loc 2 266 0
  79 003c 2D93      		st X+,r18
  80 003e 3C93      		st X,r19
  81               	.LVL5:
 267:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev      = p;
  82               		.loc 2 267 0
  83 0040 3C8F      		std Y+28,r19
  84 0042 2B8F      		std Y+27,r18
  85               	.LVL6:
  86               	.LBE227:
  87               	.LBE226:
 115:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #else
 116:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   (void)name;
 117:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 118:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_WAITEXIT == TRUE
 119:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   ch_list_init(&tp->waiting);
  88               		.loc 1 119 0
  89 0044 CB01      		movw r24,r22
  90               	.LVL7:
  91 0046 4496      		adiw r24,20
  92               	.LVL8:
  93               	.LBB228:
  94               	.LBB229:
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
  95               		.loc 2 155 0
  96 0048 958B      		std Z+21,r25
  97 004a 848B      		std Z+20,r24
  98               	.LVL9:
  99               	.LBE229:
 100               	.LBE228:
 120:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 121:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_MESSAGES == TRUE
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   ch_queue_init(&tp->msgqueue);
 101               		.loc 1 122 0
 102 004c 0296      		adiw r24,2
 103               	.LVL10:
 104               	.LBB230:
 105               	.LBB231:
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev = qp;
 106               		.loc 2 224 0
 107 004e 978B      		std Z+23,r25
 108 0050 868B      		std Z+22,r24
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 109               		.loc 2 225 0
 110 0052 918F      		std Z+25,r25
 111 0054 808F      		std Z+24,r24
 112               	.LVL11:
 113               	.LBE231:
 114               	.LBE230:
 123:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 124:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_DBG_STATISTICS == TRUE
 125:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chTMObjectInit(&tp->stats);
 126:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 127:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   CH_CFG_THREAD_INIT_HOOK(tp);
 128:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return tp;
 129:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 115               		.loc 1 129 0
 116 0056 CB01      		movw r24,r22
 117               	/* epilogue start */
 118 0058 DF91      		pop r29
 119 005a CF91      		pop r28
 120               	.LVL12:
 121 005c 0895      		ret
 122               		.cfi_endproc
 123               	.LFE195:
 125               		.section	.text.chThdCreateSuspendedI,"ax",@progbits
 126               	.global	chThdCreateSuspendedI
 128               	chThdCreateSuspendedI:
 129               	.LFB196:
 130:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 131:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_DBG_FILL_THREADS == TRUE) || defined(__DOXYGEN__)
 132:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 133:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Stack fill utility.
 134:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 135:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] startp    first address to fill
 136:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] endp      last address to fill +1
 137:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 138:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @notapi
 139:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 140:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void __thd_stackfill(uint8_t *startp, uint8_t *endp) {
 141:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 142:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   do {
 143:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     *startp++ = CH_DBG_STACK_FILL_VALUE;
 144:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   } while (likely(startp < endp));
 145:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 146:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif /* CH_DBG_FILL_THREADS */
 147:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 148:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 149:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 150:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The new thread is initialized but not inserted in the ready list,
 151:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the initial state is @p CH_STATE_WTSTART.
 152:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 153:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 154:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 156:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 157:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 158:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          depending on the execution context.
 159:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 160:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          returning from its main function.
 161:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    Threads created using this function do not obey to the
 162:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p CH_DBG_FILL_THREADS debug option because it would keep
 163:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the kernel locked for too much time.
 164:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 165:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 166:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 167:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 168:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 169:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 170:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 171:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp) {
 130               		.loc 1 171 0
 131               		.cfi_startproc
 132               	.LVL13:
 133 0000 CF93      		push r28
 134               	.LCFI2:
 135               		.cfi_def_cfa_offset 3
 136               		.cfi_offset 28, -2
 137 0002 DF93      		push r29
 138               	.LCFI3:
 139               		.cfi_def_cfa_offset 4
 140               		.cfi_offset 29, -3
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	/* stack size = 2 */
 144               	.L__stack_usage = 2
 145 0004 DC01      		movw r26,r24
 172:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *tp;
 173:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 174:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheckClassI();
 175:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheck(tdp != NULL);
 176:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheck(MEM_IS_ALIGNED(tdp->wbase, PORT_WORKING_AREA_ALIGN) &&
 177:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(tdp->wend, PORT_STACK_ALIGN) &&
 178:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              (tdp->wend > tdp->wbase) &&
 179:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              (((size_t)tdp->wend - (size_t)tdp->wbase) >= THD_WORKING_AREA_SIZE(0)));
 180:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheck((tdp->prio <= HIGHPRIO) && (tdp->funcp != NULL));
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 182:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* The thread structure is laid out in the upper part of the thread
 183:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****      workspace. The thread position structure is aligned to the required
 184:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****      stack alignment because it represents the stack top.*/
 185:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp = threadref(((uint8_t *)tdp->wend -
 146               		.loc 1 185 0
 147 0006 1496      		adiw r26,4
 148 0008 2D91      		ld r18,X+
 149 000a 3C91      		ld r19,X
 150 000c 1597      		sbiw r26,4+1
 151               	.LVL14:
 186:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****                  MEM_ALIGN_NEXT(sizeof (thread_t), PORT_STACK_ALIGN)));
 187:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 188:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE)
 189:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Stack boundary.*/
 190:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->wabase = tdp->wbase;
 191:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 192:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 193:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Setting up the port-dependent part of the working area.*/
 194:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   PORT_SETUP_CONTEXT(tp, tdp->wbase, tp, tdp->funcp, tdp->arg);
 152               		.loc 1 194 0
 153 000e F901      		movw r30,r18
 154 0010 7E97      		sbiw r30,30
 155               	.LVL15:
 156 0012 E901      		movw r28,r18
 157 0014 E397      		sbiw r28,51
 158 0016 D683      		std Z+6,r29
 159 0018 C583      		std Z+5,r28
 160 001a 1796      		adiw r26,7
 161 001c 9C91      		ld r25,X
 162 001e 1797      		sbiw r26,7
 163 0020 1896      		adiw r26,8
 164 0022 8C91      		ld r24,X
 165 0024 1897      		sbiw r26,8
 166               	.LVL16:
 167 0026 9A8B      		std Y+18,r25
 168 0028 898B      		std Y+17,r24
 169 002a 1996      		adiw r26,9
 170 002c 9C91      		ld r25,X
 171 002e 1997      		sbiw r26,9
 172 0030 1A96      		adiw r26,10
 173 0032 8C91      		ld r24,X
 174 0034 1A97      		sbiw r26,10
 175 0036 988B      		std Y+16,r25
 176 0038 8F87      		std Y+15,r24
 177 003a 80E0      		ldi r24,lo8(gs(_port_thread_start))
 178 003c 90E0      		ldi r25,hi8(gs(_port_thread_start))
 179 003e 9B8B      		std Y+19,r25
 180 0040 8C8B      		std Y+20,r24
 195:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 196:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* The thread object is initialized but not started.*/
 197:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_SMP_MODE != FALSE
 198:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (tdp->instance != NULL) {
 199:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     return __thd_object_init(tdp->instance, tp, tdp->name, tdp->prio);
 200:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 201:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 202:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 203:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return __thd_object_init(currcore, tp, tdp->name, tdp->prio);
 181               		.loc 1 203 0
 182 0042 1696      		adiw r26,6
 183 0044 8C91      		ld r24,X
 184 0046 1697      		sbiw r26,6
 185 0048 4D91      		ld r20,X+
 186 004a 5C91      		ld r21,X
 187               	.LVL17:
 188               	.LBB232:
 189               	.LBB233:
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->state             = CH_STATE_WTSTART;
 190               		.loc 1 94 0
 191 004c 8483      		std Z+4,r24
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->flags             = CH_FLAG_MODE_STATIC;
 192               		.loc 1 95 0
 193 004e 92E0      		ldi r25,lo8(2)
 194 0050 9787      		std Z+15,r25
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->owner             = oip;
 195               		.loc 1 96 0
 196 0052 108A      		std Z+16,__zero_reg__
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_TIME_QUANTUM > 0
 197               		.loc 1 97 0
 198 0054 60E0      		ldi r22,lo8(ch0)
 199 0056 70E0      		ldi r23,hi8(ch0)
 200 0058 7487      		std Z+12,r23
 201 005a 6387      		std Z+11,r22
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->mtxlist           = NULL;
 202               		.loc 1 102 0
 203 005c 858F      		std Z+29,r24
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 204               		.loc 1 103 0
 205 005e 148E      		std Z+28,__zero_reg__
 206 0060 138E      		std Z+27,__zero_reg__
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 207               		.loc 1 106 0
 208 0062 128E      		std Z+26,__zero_reg__
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->name              = name;
 209               		.loc 1 112 0
 210 0064 81E0      		ldi r24,lo8(1)
 211               	.LVL18:
 212 0066 818B      		std Z+17,r24
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   REG_INSERT(oip, tp);
 213               		.loc 1 113 0
 214 0068 5687      		std Z+14,r21
 215 006a 4587      		std Z+13,r20
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #else
 216               		.loc 1 114 0
 217 006c D901      		movw r26,r18
 218               	.LVL19:
 219 006e 5797      		sbiw r26,23
 220               	.LVL20:
 221               	.LBB234:
 222               	.LBB235:
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 223               		.loc 2 264 0
 224 0070 80E0      		ldi r24,lo8(ch0+25)
 225 0072 90E0      		ldi r25,hi8(ch0+25)
 226               	.LVL21:
 227 0074 1196      		adiw r26,1
 228 0076 9C93      		st X,r25
 229 0078 8E93      		st -X,r24
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev->next = p;
 230               		.loc 2 265 0
 231 007a EB01      		movw r28,r22
 232 007c 8B8D      		ldd r24,Y+27
 233 007e 9C8D      		ldd r25,Y+28
 234               	.LVL22:
 235 0080 1396      		adiw r26,2+1
 236 0082 9C93      		st X,r25
 237 0084 8E93      		st -X,r24
 238 0086 1297      		sbiw r26,2
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev      = p;
 239               		.loc 2 266 0
 240 0088 EC01      		movw r28,r24
 241 008a B983      		std Y+1,r27
 242 008c A883      		st Y,r26
 243               	.LVL23:
 244               		.loc 2 267 0
 245 008e EB01      		movw r28,r22
 246 0090 BC8F      		std Y+28,r27
 247 0092 AB8F      		std Y+27,r26
 248               	.LVL24:
 249               	.LBE235:
 250               	.LBE234:
 251               	.LBB236:
 252               	.LBB237:
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 253               		.loc 2 155 0
 254 0094 1D96      		adiw r26,13
 255 0096 0B2E      		mov __tmp_reg__,r27
 256 0098 1196      		adiw r26,1
 257 009a 0C92      		st X,__tmp_reg__
 258 009c 1197      		sbiw r26,1
 259 009e AC93      		st X,r26
 260               	.LBE237:
 261               	.LBE236:
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 262               		.loc 1 122 0
 263 00a0 1296      		adiw r26,2
 264               	.LVL25:
 265               	.LBB238:
 266               	.LBB239:
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev = qp;
 267               		.loc 2 224 0
 268 00a2 0B2E      		mov __tmp_reg__,r27
 269 00a4 1196      		adiw r26,1
 270 00a6 0C92      		st X,__tmp_reg__
 271 00a8 1197      		sbiw r26,1
 272 00aa AC93      		st X,r26
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 273               		.loc 2 225 0
 274 00ac 0A2E      		mov __tmp_reg__,r26
 275 00ae 1B2E      		mov __zero_reg__,r27
 276 00b0 1396      		adiw r26,2+1
 277 00b2 1C92      		st X,__zero_reg__
 278 00b4 0E92      		st -X,__tmp_reg__
 279 00b6 1124      		clr __zero_reg__
 280 00b8 1297      		sbiw r26,2
 281               	.LVL26:
 282               	.LBE239:
 283               	.LBE238:
 284               	.LBE233:
 285               	.LBE232:
 204:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 286               		.loc 1 204 0
 287 00ba CF01      		movw r24,r30
 288               	/* epilogue start */
 289 00bc DF91      		pop r29
 290 00be CF91      		pop r28
 291 00c0 0895      		ret
 292               		.cfi_endproc
 293               	.LFE196:
 295               		.section	.text.chThdCreateSuspended,"ax",@progbits
 296               	.global	chThdCreateSuspended
 298               	chThdCreateSuspended:
 299               	.LFB197:
 205:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 206:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 207:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 208:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The new thread is initialized but not inserted in the ready list,
 209:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the initial state is @p CH_STATE_WTSTART.
 210:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 211:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 212:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 213:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 214:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 215:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 216:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          depending on the execution context.
 217:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 218:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          returning from its main function.
 219:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 220:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 221:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 222:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 223:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 226:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp) {
 300               		.loc 1 226 0
 301               		.cfi_startproc
 302               	.LVL27:
 303               	/* prologue: function */
 304               	/* frame size = 0 */
 305               	/* stack size = 0 */
 306               	.L__stack_usage = 0
 307               	.LBB240:
 308               	.LBB241:
 309               	.LBB242:
 310               		.file 3 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h"
   1:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*
   2:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
   5:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   6:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
   7:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   9:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     the Free Software Foundation version 3 of the License.
  10:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  11:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  16:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** */
  19:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  20:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  21:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @file    chcore.h
  22:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   AVR port macros and structures.
  23:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
  24:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @addtogroup AVR_CORE
  25:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @{
  26:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  27:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  28:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  29:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define CHCORE_H
  30:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  31:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  32:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  33:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  34:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  35:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  36:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  37:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  38:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  40:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  41:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  42:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @{
  43:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  44:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  45:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  46:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  47:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  48:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  49:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  50:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  51:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  52:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  53:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  54:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  55:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  56:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  57:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    It is the alignment required for the stack pointer.
  58:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  59:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  60:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  61:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  62:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  63:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  64:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  65:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  66:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /** @} */
  67:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  68:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  69:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  70:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @{
  71:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  72:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  73:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  74:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  75:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  76:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  77:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  78:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  79:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  80:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  81:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  82:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  83:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  84:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  85:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "AVR"
  86:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  87:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  88:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Name of the architecture variant.
  89:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  90:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_CORE_VARIANT_NAME          "MegaAVR"
  91:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  92:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
  93:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
  98:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #else
  99:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
 100:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 101:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 104:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 105:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /** @} */
 107:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 108:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 109:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 110:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 111:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 115:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 116:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 117:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 118:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 119:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 120:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 121:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 123:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 124:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 125:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          area size.
 126:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 127:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 128:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 129:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 130:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 131:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 132:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 133:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 134:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 135:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 136:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 137:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 138:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 139:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 140:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 141:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 142:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 143:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 144:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 145:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 146:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 147:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****    asm module.*/
 148:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 149:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 150:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 151:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 152:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 153:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 154:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 156:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 157:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 158:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 159:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 160:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 161:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 162:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 163:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** struct port_extctx {
 164:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 165:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 166:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 167:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 168:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 169:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 170:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 171:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 172:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 173:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 174:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 175:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 176:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 177:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 178:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 179:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 180:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 182:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 183:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 184:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** };
 185:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 186:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 187:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 188:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 189:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          switching.
 190:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 191:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 192:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 193:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          structure.
 194:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 195:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** struct port_intctx {
 196:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 197:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 198:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 199:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 200:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 201:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 202:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 203:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 204:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 205:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 206:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 207:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 208:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 209:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 210:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 211:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 212:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 213:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 214:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 215:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 216:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 217:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 218:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 219:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 220:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** };
 221:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 222:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 223:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 226:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 227:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** struct port_context {
 228:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 229:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** };
 230:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 231:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 232:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 233:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 234:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 235:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 236:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 237:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 238:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 239:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 240:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 241:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 242:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 243:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 244:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 245:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 246:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 247:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 248:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 249:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 250:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 252:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 253:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 254:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 255:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 256:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 257:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 258:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 259:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 260:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 261:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 262:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 263:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 267:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 268:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 269:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 270:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 271:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 272:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 273:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 274:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 275:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 276:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 277:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 278:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 279:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
 280:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 281:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 282:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 285:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 286:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 287:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 288:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 289:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 290:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 291:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 292:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 293:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 294:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 295:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 296:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 297:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 298:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 299:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 300:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 301:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 302:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 303:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 304:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 305:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 306:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 307:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 308:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 309:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 310:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 311:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 312:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 313:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 314:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 315:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 316:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   __dbg_check_lock();                                                       \
 317:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 318:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****     chSchDoPreemption();                                                    \
 319:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   __dbg_check_unlock();                                                     \
 320:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 321:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 322:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 323:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 324:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 325:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          port implementation.
 326:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 327:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 328:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 329:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 330:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 331:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 334:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 335:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 336:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 337:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 338:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 339:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 340:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 341:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 342:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 344:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 345:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 346:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 347:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 348:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 349:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 350:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 351:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 352:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 353:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 354:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 355:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 356:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #define port_init(oip) {                                                    \
 357:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 358:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 359:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 360:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 361:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 362:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 363:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 364:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 365:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****    asm module.*/
 366:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 367:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 368:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 369:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** extern "C" {
 370:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 371:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 372:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 373:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 374:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 375:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif
 376:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 377:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 378:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 379:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 380:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 381:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 382:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 383:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 384:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****    asm module.*/
 385:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 386:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 387:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 388:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 389:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
 390:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 391:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 392:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 393:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 394:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   return SREG;
 395:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 396:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 397:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 398:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 399:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
 400:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 401:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
 402:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 403:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 404:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 405:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 406:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 407:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 408:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 409:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 410:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 411:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 412:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 413:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *
 414:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 415:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 416:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 417:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 418:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 419:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 420:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 421:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 422:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 423:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 424:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 425:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 426:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          actions.
 427:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 428:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
 429:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
 311               		.loc 3 430 0
 312               	/* #APP */
 313               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 314 0000 F894      		cli
 315               	 ;  0 "" 2
 316               	/* #NOAPP */
 317               	.LBE242:
 318               	.LBE241:
 319               	.LBE240:
 227:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *tp;
 228:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 229:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 230:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(tdp->wbase) == NULL,
 231:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****               "working area in use");
 232:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 233:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 234:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 235:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   __thd_stackfill((uint8_t *)tdp->wbase, (uint8_t *)tdp->wend);
 236:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 237:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 238:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 239:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 320               		.loc 1 239 0
 321 0002 0E94 0000 		call chThdCreateSuspendedI
 322               	.LVL28:
 323               	.LBB243:
 324               	.LBB244:
 325               	.LBB245:
 326               	.LBB246:
 431:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 432:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 433:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** /**
 434:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 435:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 436:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  *          actions.
 437:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****  */
 438:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 439:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** 
 440:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 327               		.loc 3 440 0
 328               	/* #APP */
 329               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 330 0006 7894      		sei
 331               	 ;  0 "" 2
 332               	/* epilogue start */
 333               	/* #NOAPP */
 334               	.LBE246:
 335               	.LBE245:
 336               	.LBE244:
 337               	.LBE243:
 240:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 241:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 242:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return tp;
 243:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 338               		.loc 1 243 0
 339 0008 0895      		ret
 340               		.cfi_endproc
 341               	.LFE197:
 343               		.section	.text.chThdCreateI,"ax",@progbits
 344               	.global	chThdCreateI
 346               	chThdCreateI:
 347               	.LFB198:
 244:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 245:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 246:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 247:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The new thread is initialized and make ready to execute.
 248:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 249:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 250:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 252:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The initialized thread can be subsequently started by invoking
 253:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p chThdStart(), @p chThdStartI() or @p chSchWakeupS()
 254:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          depending on the execution context.
 255:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 256:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          returning from its main function.
 257:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    Threads created using this function do not obey to the
 258:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p CH_DBG_FILL_THREADS debug option because it would keep
 259:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the kernel locked for too much time.
 260:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 261:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 262:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 263:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 267:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdCreateI(const thread_descriptor_t *tdp) {
 348               		.loc 1 267 0
 349               		.cfi_startproc
 350               	.LVL29:
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 268:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 269:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return chSchReadyI(chThdCreateSuspendedI(tdp));
 355               		.loc 1 269 0
 356 0000 0E94 0000 		call chThdCreateSuspendedI
 357               	.LVL30:
 358 0004 0C94 0000 		jmp chSchReadyI
 359               	.LVL31:
 360               		.cfi_endproc
 361               	.LFE198:
 363               		.section	.text.chThdCreate,"ax",@progbits
 364               	.global	chThdCreate
 366               	chThdCreate:
 367               	.LFB199:
 270:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 271:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 272:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 273:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 274:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The new thread is initialized and make ready to execute.
 275:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 276:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 277:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 278:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 279:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 280:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          returning from its main function.
 281:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 282:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[out] tdp      pointer to the thread descriptor
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 285:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 286:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 287:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 288:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdCreate(const thread_descriptor_t *tdp) {
 368               		.loc 1 288 0
 369               		.cfi_startproc
 370               	.LVL32:
 371 0000 CF93      		push r28
 372               	.LCFI4:
 373               		.cfi_def_cfa_offset 3
 374               		.cfi_offset 28, -2
 375 0002 DF93      		push r29
 376               	.LCFI5:
 377               		.cfi_def_cfa_offset 4
 378               		.cfi_offset 29, -3
 379               	/* prologue: function */
 380               	/* frame size = 0 */
 381               	/* stack size = 2 */
 382               	.L__stack_usage = 2
 383               	.LBB247:
 384               	.LBB248:
 385               	.LBB249:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 386               		.loc 3 430 0
 387               	/* #APP */
 388               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 389 0004 F894      		cli
 390               	 ;  0 "" 2
 391               	/* #NOAPP */
 392               	.LBE249:
 393               	.LBE248:
 394               	.LBE247:
 289:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *tp;
 290:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 291:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) &&                                        \
 292:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     ((CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE))
 293:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(tdp->wbase) == NULL,
 294:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****               "working area in use");
 295:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 296:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 297:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 298:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   __thd_stackfill((uint8_t *)tdp->wbase, (uint8_t *)tdp->wend);
 299:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 300:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 301:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 302:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp = chThdCreateSuspendedI(tdp);
 395               		.loc 1 302 0
 396 0006 0E94 0000 		call chThdCreateSuspendedI
 397               	.LVL33:
 398 000a EC01      		movw r28,r24
 399               	.LVL34:
 303:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 400               		.loc 1 303 0
 401 000c 70E0      		ldi r23,0
 402 000e 60E0      		ldi r22,0
 403 0010 0E94 0000 		call chSchWakeupS
 404               	.LVL35:
 405               	.LBB250:
 406               	.LBB251:
 407               	.LBB252:
 408               	.LBB253:
 409               		.loc 3 440 0
 410               	/* #APP */
 411               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 412 0014 7894      		sei
 413               	 ;  0 "" 2
 414               	/* #NOAPP */
 415               	.LBE253:
 416               	.LBE252:
 417               	.LBE251:
 418               	.LBE250:
 304:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 305:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 306:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return tp;
 307:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 419               		.loc 1 307 0
 420 0016 CE01      		movw r24,r28
 421               	/* epilogue start */
 422 0018 DF91      		pop r29
 423 001a CF91      		pop r28
 424               	.LVL36:
 425 001c 0895      		ret
 426               		.cfi_endproc
 427               	.LFE199:
 429               		.section	.rodata.chThdCreateStatic.str1.1,"aMS",@progbits,1
 430               	.LC0:
 431 0000 6E6F 6E61 		.string	"noname"
 431      6D65 00
 432               		.section	.text.chThdCreateStatic,"ax",@progbits
 433               	.global	chThdCreateStatic
 435               	chThdCreateStatic:
 436               	.LFB200:
 308:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 309:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 310:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Creates a new thread into a static memory area.
 311:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The created thread has a reference counter set to one, it is
 312:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          caller responsibility to call @p chThdRelease() or @p chthdWait()
 313:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          in order to release the reference. The thread persists in the
 314:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          registry until its reference counter reaches zero.
 315:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    A thread can terminate by calling @p chThdExit() or by simply
 316:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          returning from its main function.
 317:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 318:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[out] wsp      pointer to a working area dedicated to the thread stack
 319:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] size      size of the working area
 320:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] prio      the priority level for the new thread
 321:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] pf        the thread function
 322:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] arg       an argument passed to the thread function. It can be
 323:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      @p NULL.
 324:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 325:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 326:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 327:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 328:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 329:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdCreateStatic(void *wsp, size_t size,
 330:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****                             tprio_t prio, tfunc_t pf, void *arg) {
 437               		.loc 1 330 0
 438               		.cfi_startproc
 439               	.LVL37:
 440 0000 0F93      		push r16
 441               	.LCFI6:
 442               		.cfi_def_cfa_offset 3
 443               		.cfi_offset 16, -2
 444 0002 1F93      		push r17
 445               	.LCFI7:
 446               		.cfi_def_cfa_offset 4
 447               		.cfi_offset 17, -3
 448 0004 CF93      		push r28
 449               	.LCFI8:
 450               		.cfi_def_cfa_offset 5
 451               		.cfi_offset 28, -4
 452 0006 DF93      		push r29
 453               	.LCFI9:
 454               		.cfi_def_cfa_offset 6
 455               		.cfi_offset 29, -5
 456               	/* prologue: function */
 457               	/* frame size = 0 */
 458               	/* stack size = 4 */
 459               	.L__stack_usage = 4
 460               	.LBB254:
 461               	.LBB255:
 462               	.LBB256:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 463               		.loc 3 430 0
 464               	/* #APP */
 465               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 466 0008 F894      		cli
 467               	 ;  0 "" 2
 468               	/* #NOAPP */
 469               	.LBE256:
 470               	.LBE255:
 471               	.LBE254:
 331:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *tp;
 332:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 333:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheck((wsp != NULL) &&
 334:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(wsp, PORT_WORKING_AREA_ALIGN) &&
 335:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              (size >= THD_WORKING_AREA_SIZE(0)) &&
 336:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              MEM_IS_ALIGNED(size, PORT_STACK_ALIGN) &&
 337:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****              (prio <= HIGHPRIO) && (pf != NULL));
 338:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 339:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) &&                                        \
 340:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     ((CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE))
 341:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(chRegFindThreadByWorkingArea(wsp) == NULL,
 342:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****               "working area in use");
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 344:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 345:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_DBG_FILL_THREADS == TRUE
 346:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   __thd_stackfill((uint8_t *)wsp, (uint8_t *)wsp + size);
 347:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 348:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 349:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 350:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 351:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* The thread structure is laid out in the upper part of the thread
 352:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****      workspace. The thread position structure is aligned to the required
 353:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****      stack alignment because it represents the stack top.*/
 354:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp = threadref(((uint8_t *)wsp + size -
 472               		.loc 1 354 0
 473 000a 6E51      		subi r22,30
 474 000c 7109      		sbc r23,__zero_reg__
 475               	.LVL38:
 476 000e EC01      		movw r28,r24
 477 0010 C60F      		add r28,r22
 478 0012 D71F      		adc r29,r23
 479               	.LVL39:
 355:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****                  MEM_ALIGN_NEXT(sizeof (thread_t), PORT_STACK_ALIGN)));
 356:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 357:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE)
 358:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Stack boundary.*/
 359:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->wabase = (stkalign_t *)wsp;
 360:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 361:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 362:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Setting up the port-dependent part of the working area.*/
 363:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   PORT_SETUP_CONTEXT(tp, wsp, tp, pf, arg);
 480               		.loc 1 363 0
 481 0014 FE01      		movw r30,r28
 482 0016 7597      		sbiw r30,21
 483 0018 FE83      		std Y+6,r31
 484 001a ED83      		std Y+5,r30
 485 001c 228B      		std Z+18,r18
 486 001e 318B      		std Z+17,r19
 487 0020 008B      		std Z+16,r16
 488 0022 1787      		std Z+15,r17
 489 0024 80E0      		ldi r24,lo8(gs(_port_thread_start))
 490 0026 90E0      		ldi r25,hi8(gs(_port_thread_start))
 491               	.LVL40:
 492 0028 938B      		std Z+19,r25
 493 002a 848B      		std Z+20,r24
 494               	.LVL41:
 495               	.LBB257:
 496               	.LBB258:
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->state             = CH_STATE_WTSTART;
 497               		.loc 1 94 0
 498 002c 4C83      		std Y+4,r20
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->flags             = CH_FLAG_MODE_STATIC;
 499               		.loc 1 95 0
 500 002e 82E0      		ldi r24,lo8(2)
 501 0030 8F87      		std Y+15,r24
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->owner             = oip;
 502               		.loc 1 96 0
 503 0032 188A      		std Y+16,__zero_reg__
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_TIME_QUANTUM > 0
 504               		.loc 1 97 0
 505 0034 E0E0      		ldi r30,lo8(ch0)
 506 0036 F0E0      		ldi r31,hi8(ch0)
 507 0038 FC87      		std Y+12,r31
 508 003a EB87      		std Y+11,r30
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->mtxlist           = NULL;
 509               		.loc 1 102 0
 510 003c 4D8F      		std Y+29,r20
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 511               		.loc 1 103 0
 512 003e 1C8E      		std Y+28,__zero_reg__
 513 0040 1B8E      		std Y+27,__zero_reg__
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 514               		.loc 1 106 0
 515 0042 1A8E      		std Y+26,__zero_reg__
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->name              = name;
 516               		.loc 1 112 0
 517 0044 81E0      		ldi r24,lo8(1)
 518 0046 898B      		std Y+17,r24
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   REG_INSERT(oip, tp);
 519               		.loc 1 113 0
 520 0048 80E0      		ldi r24,lo8(.LC0)
 521 004a 90E0      		ldi r25,hi8(.LC0)
 522 004c 9E87      		std Y+14,r25
 523 004e 8D87      		std Y+13,r24
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #else
 524               		.loc 1 114 0
 525 0050 CE01      		movw r24,r28
 526 0052 0796      		adiw r24,7
 527               	.LVL42:
 528               	.LBB259:
 529               	.LBB260:
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 530               		.loc 2 264 0
 531 0054 20E0      		ldi r18,lo8(ch0+25)
 532 0056 30E0      		ldi r19,hi8(ch0+25)
 533               	.LVL43:
 534 0058 3887      		std Y+8,r19
 535 005a 2F83      		std Y+7,r18
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev->next = p;
 536               		.loc 2 265 0
 537 005c A38D      		ldd r26,Z+27
 538 005e B48D      		ldd r27,Z+28
 539 0060 BA87      		std Y+10,r27
 540 0062 A987      		std Y+9,r26
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev      = p;
 541               		.loc 2 266 0
 542 0064 8D93      		st X+,r24
 543 0066 9C93      		st X,r25
 544               		.loc 2 267 0
 545 0068 948F      		std Z+28,r25
 546 006a 838F      		std Z+27,r24
 547               	.LVL44:
 548               	.LBE260:
 549               	.LBE259:
 119:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 550               		.loc 1 119 0
 551 006c 0D96      		adiw r24,13
 552               	.LBB261:
 553               	.LBB262:
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 554               		.loc 2 155 0
 555 006e 9D8B      		std Y+21,r25
 556 0070 8C8B      		std Y+20,r24
 557               	.LVL45:
 558               	.LBE262:
 559               	.LBE261:
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 560               		.loc 1 122 0
 561 0072 0296      		adiw r24,2
 562               	.LVL46:
 563               	.LBB263:
 564               	.LBB264:
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev = qp;
 565               		.loc 2 224 0
 566 0074 9F8B      		std Y+23,r25
 567 0076 8E8B      		std Y+22,r24
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 568               		.loc 2 225 0
 569 0078 998F      		std Y+25,r25
 570 007a 888F      		std Y+24,r24
 571               	.LVL47:
 572               	.LBE264:
 573               	.LBE263:
 574               	.LBE258:
 575               	.LBE257:
 364:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 365:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp = __thd_object_init(currcore, tp, "noname", prio);
 366:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 367:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Starting the thread immediately.*/
 368:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 576               		.loc 1 368 0
 577 007c 70E0      		ldi r23,0
 578 007e 60E0      		ldi r22,0
 579               	.LVL48:
 580 0080 CE01      		movw r24,r28
 581 0082 0E94 0000 		call chSchWakeupS
 582               	.LVL49:
 583               	.LBB265:
 584               	.LBB266:
 585               	.LBB267:
 586               	.LBB268:
 587               		.loc 3 440 0
 588               	/* #APP */
 589               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 590 0086 7894      		sei
 591               	 ;  0 "" 2
 592               	/* #NOAPP */
 593               	.LBE268:
 594               	.LBE267:
 595               	.LBE266:
 596               	.LBE265:
 369:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 370:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 371:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return tp;
 372:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 597               		.loc 1 372 0
 598 0088 CE01      		movw r24,r28
 599               	/* epilogue start */
 600 008a DF91      		pop r29
 601 008c CF91      		pop r28
 602 008e 1F91      		pop r17
 603 0090 0F91      		pop r16
 604               	.LVL50:
 605 0092 0895      		ret
 606               		.cfi_endproc
 607               	.LFE200:
 609               		.section	.text.chThdStart,"ax",@progbits
 610               	.global	chThdStart
 612               	chThdStart:
 613               	.LFB201:
 373:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 374:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 375:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Resumes a thread created with @p chThdCreateI().
 376:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 377:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 378:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The pointer to the @p thread_t structure allocated for
 379:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      the thread into the working space area.
 380:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 381:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 382:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 383:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdStart(thread_t *tp) {
 614               		.loc 1 383 0
 615               		.cfi_startproc
 616               	.LVL51:
 617 0000 CF93      		push r28
 618               	.LCFI10:
 619               		.cfi_def_cfa_offset 3
 620               		.cfi_offset 28, -2
 621 0002 DF93      		push r29
 622               	.LCFI11:
 623               		.cfi_def_cfa_offset 4
 624               		.cfi_offset 29, -3
 625               	/* prologue: function */
 626               	/* frame size = 0 */
 627               	/* stack size = 2 */
 628               	.L__stack_usage = 2
 629 0004 EC01      		movw r28,r24
 630               	.LBB269:
 631               	.LBB270:
 632               	.LBB271:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 633               		.loc 3 430 0
 634               	/* #APP */
 635               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 636 0006 F894      		cli
 637               	 ;  0 "" 2
 638               	/* #NOAPP */
 639               	.LBE271:
 640               	.LBE270:
 641               	.LBE269:
 384:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 385:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 386:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 387:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchWakeupS(tp, MSG_OK);
 642               		.loc 1 387 0
 643 0008 70E0      		ldi r23,0
 644 000a 60E0      		ldi r22,0
 645 000c 0E94 0000 		call chSchWakeupS
 646               	.LVL52:
 647               	.LBB272:
 648               	.LBB273:
 649               	.LBB274:
 650               	.LBB275:
 651               		.loc 3 440 0
 652               	/* #APP */
 653               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 654 0010 7894      		sei
 655               	 ;  0 "" 2
 656               	/* #NOAPP */
 657               	.LBE275:
 658               	.LBE274:
 659               	.LBE273:
 660               	.LBE272:
 388:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 389:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 390:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return tp;
 391:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 661               		.loc 1 391 0
 662 0012 CE01      		movw r24,r28
 663               	/* epilogue start */
 664 0014 DF91      		pop r29
 665 0016 CF91      		pop r28
 666               	.LVL53:
 667 0018 0895      		ret
 668               		.cfi_endproc
 669               	.LFE201:
 671               		.section	.text.chThdAddRef,"ax",@progbits
 672               	.global	chThdAddRef
 674               	chThdAddRef:
 675               	.LFB202:
 392:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 393:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
 394:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 395:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Adds a reference to a thread object.
 396:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_REGISTRY must be enabled in
 397:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          order to use this function.
 398:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 399:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 400:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The same thread pointer passed as parameter
 401:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      representing the new reference.
 402:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 403:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 404:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 405:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** thread_t *chThdAddRef(thread_t *tp) {
 676               		.loc 1 405 0
 677               		.cfi_startproc
 678               	.LVL54:
 679               	/* prologue: function */
 680               	/* frame size = 0 */
 681               	/* stack size = 0 */
 682               	.L__stack_usage = 0
 683               	.LBB276:
 684               	.LBB277:
 685               	.LBB278:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 686               		.loc 3 430 0
 687               	/* #APP */
 688               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 689 0000 F894      		cli
 690               	 ;  0 "" 2
 691               	/* #NOAPP */
 692               	.LBE278:
 693               	.LBE277:
 694               	.LBE276:
 406:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 407:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 408:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs < (trefs_t)255, "too many references");
 409:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->refs++;
 695               		.loc 1 409 0
 696 0002 FC01      		movw r30,r24
 697 0004 2189      		ldd r18,Z+17
 698 0006 2F5F      		subi r18,lo8(-(1))
 699 0008 218B      		std Z+17,r18
 700               	.LBB279:
 701               	.LBB280:
 702               	.LBB281:
 703               	.LBB282:
 704               		.loc 3 440 0
 705               	/* #APP */
 706               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 707 000a 7894      		sei
 708               	 ;  0 "" 2
 709               	/* epilogue start */
 710               	/* #NOAPP */
 711               	.LBE282:
 712               	.LBE281:
 713               	.LBE280:
 714               	.LBE279:
 410:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 411:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 412:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return tp;
 413:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 715               		.loc 1 413 0
 716 000c 0895      		ret
 717               		.cfi_endproc
 718               	.LFE202:
 720               		.section	.text.chThdRelease,"ax",@progbits
 721               	.global	chThdRelease
 723               	chThdRelease:
 724               	.LFB203:
 414:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 415:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 416:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Releases a reference to a thread object.
 417:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details If the references counter reaches zero <b>and</b> the thread
 418:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          is in the @p CH_STATE_FINAL state then the thread's memory is
 419:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          returned to the proper allocator and the thread is removed
 420:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          from the registry.<br>
 421:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          Threads whose counter reaches zero and are still active become
 422:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          "detached" and will be removed from registry on termination.
 423:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_REGISTRY must be enabled in
 424:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          order to use this function.
 425:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    Static threads are not affected.
 426:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 427:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 428:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 429:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 431:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdRelease(thread_t *tp) {
 725               		.loc 1 431 0
 726               		.cfi_startproc
 727               	.LVL55:
 728               	/* prologue: function */
 729               	/* frame size = 0 */
 730               	/* stack size = 0 */
 731               	.L__stack_usage = 0
 732 0000 FC01      		movw r30,r24
 733               	.LBB305:
 734               	.LBB306:
 735               	.LBB307:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 736               		.loc 3 430 0
 737               	/* #APP */
 738               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 739 0002 F894      		cli
 740               	 ;  0 "" 2
 741               	/* #NOAPP */
 742               	.LBE307:
 743               	.LBE306:
 744               	.LBE305:
 432:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 433:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 434:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs > (trefs_t)0, "not referenced");
 435:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->refs--;
 745               		.loc 1 435 0
 746 0004 9189      		ldd r25,Z+17
 747 0006 9150      		subi r25,lo8(-(-1))
 748 0008 918B      		std Z+17,r25
 436:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 437:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* If the references counter reaches zero and the thread is in its
 438:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****      terminated state then the memory can be returned to the proper
 439:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****      allocator.*/
 440:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if ((tp->refs == (trefs_t)0) && (tp->state == CH_STATE_FINAL)) {
 749               		.loc 1 440 0
 750 000a 9111      		cpse r25,__zero_reg__
 751 000c 00C0      		rjmp .L11
 752               		.loc 1 440 0 is_stmt 0 discriminator 1
 753 000e 8785      		ldd r24,Z+15
 754               	.LVL56:
 755 0010 8F30      		cpi r24,lo8(15)
 756 0012 01F0      		breq .L13
 757               	.L11:
 758               	.LBB308:
 759               	.LBB309:
 760               	.LBB310:
 761               	.LBB311:
 762               		.loc 3 440 0 is_stmt 1
 763               	/* #APP */
 764               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 765 0014 7894      		sei
 766               	 ;  0 "" 2
 767               	/* epilogue start */
 768               	/* #NOAPP */
 769               	.LBE311:
 770               	.LBE310:
 771               	.LBE309:
 772               	.LBE308:
 441:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     REG_REMOVE(tp);
 442:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chSysUnlock();
 443:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 444:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_DYNAMIC == TRUE
 445:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     switch (tp->flags & CH_FLAG_MODE_MASK) {
 446:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_HEAP == TRUE
 447:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     case CH_FLAG_MODE_HEAP:
 448:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       chHeapFree(chThdGetWorkingAreaX(tp));
 449:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       break;
 450:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 451:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_MEMPOOLS == TRUE
 452:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     case CH_FLAG_MODE_MPOOL:
 453:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       chPoolFree(tp->mpool, chThdGetWorkingAreaX(tp));
 454:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       break;
 455:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 456:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     default:
 457:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       /* Nothing else to do for static threads.*/
 458:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       break;
 459:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     }
 460:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_DYNAMIC == TRUE */
 461:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     return;
 462:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 463:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 464:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 773               		.loc 1 464 0
 774 0016 0895      		ret
 775               	.L13:
 776               	.LVL57:
 777               	.LBB312:
 778               	.LBB313:
 779               	.LBB314:
 780               	.LBB315:
 268:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 269:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 270:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 271:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Removes the first-out element from a queue and returns it.
 272:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @note    If the queue is priority ordered then this function returns the
 273:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          element with the highest priority.
 274:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 275:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] qp        the pointer to the queue list header
 276:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 277:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 278:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 279:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 280:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline ch_queue_t *ch_queue_fifo_remove(ch_queue_t *qp) {
 281:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_queue_t *p = qp->next;
 282:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->next       = p->next;
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->next->prev = qp;
 285:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 286:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return p;
 287:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 288:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 289:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 290:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Removes the last-out element from a queue and returns it.
 291:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @note    If the queue is priority ordered then this function returns the
 292:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          element with the lowest priority.
 293:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 294:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] qp    the pointer to the queue list header
 295:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return          The removed element pointer.
 296:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 297:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 298:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 299:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline ch_queue_t *ch_queue_lifo_remove(ch_queue_t *qp) {
 300:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   ch_queue_t *p = qp->prev;
 301:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 302:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev       = p->prev;
 303:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev->next = qp;
 304:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 305:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   return p;
 306:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 307:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 308:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** /**
 309:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @brief   Removes an element from a queue and returns it.
 310:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @details The element is removed from the queue regardless of its relative
 311:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *          position and regardless the used insertion method.
 312:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 313:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @param[in] p         the pointer to the element to be removed from the queue
 314:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @return              The removed element pointer.
 315:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  *
 316:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  * @notapi
 317:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****  */
 318:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** static inline ch_queue_t *ch_queue_dequeue(ch_queue_t *p) {
 319:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 320:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev->next = p->next;
 781               		.loc 2 320 0
 782 0018 A185      		ldd r26,Z+9
 783 001a B285      		ldd r27,Z+10
 784 001c 8781      		ldd r24,Z+7
 785 001e 9085      		ldd r25,Z+8
 786 0020 1196      		adiw r26,1
 787 0022 9C93      		st X,r25
 788 0024 8E93      		st -X,r24
 321:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->next->prev = p->prev;
 789               		.loc 2 321 0
 790 0026 0780      		ldd __tmp_reg__,Z+7
 791 0028 F085      		ldd r31,Z+8
 792 002a E02D      		mov r30,__tmp_reg__
 793               	.LVL58:
 794 002c B383      		std Z+3,r27
 795 002e A283      		std Z+2,r26
 796               	.LVL59:
 797               	.LBE315:
 798               	.LBE314:
 799               	.LBB316:
 800               	.LBB317:
 801               	.LBB318:
 802               	.LBB319:
 803               		.loc 3 440 0
 804               	/* #APP */
 805               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 806 0030 7894      		sei
 807               	 ;  0 "" 2
 808               	/* #NOAPP */
 809 0032 0895      		ret
 810               	.LBE319:
 811               	.LBE318:
 812               	.LBE317:
 813               	.LBE316:
 814               	.LBE313:
 815               	.LBE312:
 816               		.cfi_endproc
 817               	.LFE203:
 819               		.section	.text.chThdExitS,"ax",@progbits
 820               	.global	chThdExitS
 822               	chThdExitS:
 823               	.LFB205:
 465:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 466:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 467:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 468:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Terminates the current thread.
 469:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The thread goes in the @p CH_STATE_FINAL state holding the
 470:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          specified exit status code, other threads can retrieve the
 471:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          exit status code by invoking the function @p chThdWait().
 472:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    Eventual code after this function will never be executed,
 473:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          this function never returns. The compiler has no way to
 474:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          know this so do not assume that the compiler would remove
 475:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the dead code.
 476:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 477:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       thread exit code
 478:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 479:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 480:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 481:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdExit(msg_t msg) {
 482:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 483:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 484:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chThdExitS(msg);
 485:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 486:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 487:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 488:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 489:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Terminates the current thread.
 490:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The thread goes in the @p CH_STATE_FINAL state holding the
 491:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          specified exit status code, other threads can retrieve the
 492:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          exit status code by invoking the function @p chThdWait().
 493:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    Exiting a non-static thread that does not have references
 494:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          (detached) causes the thread to remain in the registry.
 495:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          It can only be removed by performing a registry scan operation.
 496:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    Eventual code after this function will never be executed,
 497:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          this function never returns. The compiler has no way to
 498:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          know this so do not assume that the compiler would remove
 499:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the dead code.
 500:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 501:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       thread exit code
 502:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 503:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @sclass
 504:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 505:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdExitS(msg_t msg) {
 824               		.loc 1 505 0
 825               		.cfi_startproc
 826               	.LVL60:
 827 0000 0F93      		push r16
 828               	.LCFI12:
 829               		.cfi_def_cfa_offset 3
 830               		.cfi_offset 16, -2
 831 0002 1F93      		push r17
 832               	.LCFI13:
 833               		.cfi_def_cfa_offset 4
 834               		.cfi_offset 17, -3
 835 0004 CF93      		push r28
 836               	.LCFI14:
 837               		.cfi_def_cfa_offset 5
 838               		.cfi_offset 28, -4
 839 0006 DF93      		push r29
 840               	.LCFI15:
 841               		.cfi_def_cfa_offset 6
 842               		.cfi_offset 29, -5
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 4 */
 846               	.L__stack_usage = 4
 847               	.LBB320:
 848               	.LBB321:
 849               		.file 4 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h"
   1:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*
   2:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
   5:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     This file is part of ChibiOS.
   6:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
   7:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     it under the terms of the GNU General Public License as published by
   9:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     the Free Software Foundation version 3 of the License.
  10:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  11:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     GNU General Public License for more details.
  15:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  16:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     You should have received a copy of the GNU General Public License
  17:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** */
  19:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  20:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
  21:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @file    rt/include/chthreads.h
  22:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Threads module macros and structures.
  23:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
  24:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @addtogroup threads
  25:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @{
  26:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
  27:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  28:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #ifndef CHTHREADS_H
  29:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define CHTHREADS_H
  30:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  31:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*lint -sem(chThdExit, r_no) -sem(chThdExitS, r_no)*/
  32:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  33:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  34:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* Module constants.                                                         */
  35:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  36:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  37:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  38:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* Module pre-compile time settings.                                         */
  39:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  40:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  41:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  42:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* Derived constants and error checks.                                       */
  43:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  44:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  45:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  46:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* Module data structures and types.                                         */
  47:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  48:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  49:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
  50:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Thread function.
  51:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
  52:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** typedef void (*tfunc_t)(void *p);
  53:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  54:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
  55:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Type of a thread descriptor.
  56:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
  57:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** typedef struct {
  58:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  59:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief   Thread name.
  60:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  61:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   const char        *name;
  62:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  63:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area base.
  64:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  65:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   stkalign_t        *wbase;
  66:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  67:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief   Pointer to the working area end.
  68:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  69:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   stkalign_t        *wend;
  70:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  71:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief   Thread priority.
  72:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  73:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   tprio_t           prio;
  74:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  75:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief   Thread function pointer.
  76:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  77:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   tfunc_t           funcp;
  78:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  79:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief   Thread argument.
  80:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  81:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void              *arg;
  82:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if (CH_CFG_SMP_MODE != FALSE) || defined(__DOXYGEN__)
  83:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   /**
  84:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    * @brief         OS instance affinity or @p NULL for current one.
  85:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    */
  86:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   os_instance_t     *instance;
  87:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
  88:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** } thread_descriptor_t;
  89:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  90:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  91:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* Module macros.                                                            */
  92:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
  93:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @name    Threads queues
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @{
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
  98:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
  99:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Data part of a static threads queue object initializer.
 100:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @details This macro should be used when statically initializing a threads
 101:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          queue that is part of a bigger structure.
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 104:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 105:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define __THREADS_QUEUE_DATA(name) {__CH_QUEUE_DATA(name)}
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 107:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 108:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Static threads queue object initializer.
 109:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @details Statically initialized threads queues require no explicit
 110:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          initialization using @p queue_init().
 111:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] name      the name of the threads queue variable
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THREADS_QUEUE_DECL(name)                                            \
 115:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   threads_queue_t name = __THREADS_QUEUE_DATA(name)
 116:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /** @} */
 117:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 118:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 119:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @name    Working Areas
 120:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @{
 121:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 123:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Calculates the total Working Area size.
 124:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 125:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 126:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return              The total used memory in bytes.
 127:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 128:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @api
 129:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 130:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_SIZE(n)                                            \
 131:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   MEM_ALIGN_NEXT(sizeof(thread_t) + PORT_WA_SIZE(n), PORT_STACK_ALIGN)
 132:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 133:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 134:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Static working area allocation.
 135:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @details This macro is used to allocate a static thread working area
 136:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          aligned as both position and size.
 137:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 138:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] s         the name to be assigned to the stack array
 139:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] n         the stack size to be assigned to the thread
 140:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 141:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @api
 142:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 143:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_WORKING_AREA(s, n) PORT_WORKING_AREA(s, n)
 144:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 145:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 146:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Base of a working area casted to the correct type.
 147:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 148:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 149:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 150:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_BASE(s) ((stkalign_t *)(s))
 151:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 152:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 153:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   End of a working area casted to the correct type.
 154:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] s         name of the working area
 156:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 157:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_WORKING_AREA_END(s) (THD_WORKING_AREA_BASE(s) +                 \
 158:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****                                  (sizeof (s) / sizeof (stkalign_t)))
 159:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /** @} */
 160:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 161:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 162:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @name    Threads abstraction macros
 163:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @{
 164:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 165:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 166:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Thread declaration macro.
 167:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    Thread declarations should be performed using this macro because
 168:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          the port layer could define optimizations for thread functions.
 169:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 170:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_FUNCTION(tname, arg) PORT_THD_FUNCTION(tname, arg)
 171:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /** @} */
 172:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 173:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 174:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @name    Threads initializers
 175:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @{
 176:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 177:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if (CH_CFG_SMP_MODE != FALSE) || defined(__DOXYGEN__)
 178:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 179:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Thread descriptor initializer with no affinity.
 180:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] name      thread name
 182:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] wbase     pointer to the working area base
 183:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] wend      pointer to the working area end
 184:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] prio      thread priority
 185:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] funcp     thread function pointer
 186:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] arg       thread argument
 187:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 188:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_DESCRIPTOR(name, wbase, wend, prio, funcp, arg) {               \
 189:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (name),                                                                   \
 190:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (wbase),                                                                  \
 191:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (wend),                                                                   \
 192:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (prio),                                                                   \
 193:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (funcp),                                                                  \
 194:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (arg),                                                                    \
 195:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   NULL                                                                      \
 196:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 197:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #else
 198:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_DESCRIPTOR(name, wbase, wend, prio, funcp, arg) {               \
 199:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (name),                                                                   \
 200:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (wbase),                                                                  \
 201:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (wend),                                                                   \
 202:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (prio),                                                                   \
 203:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (funcp),                                                                  \
 204:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (arg)                                                                     \
 205:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 206:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 207:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 208:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 209:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Thread descriptor initializer with no affinity.
 210:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 211:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] name      thread name
 212:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] wbase     pointer to the working area base
 213:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] wend      pointer to the working area end
 214:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] prio      thread priority
 215:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] funcp     thread function pointer
 216:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] arg       thread argument
 217:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] oip       instance affinity
 218:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 219:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define THD_DESCRIPTOR_AFFINITY(name, wbase, wend, prio, funcp, arg, oip) { \
 220:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (name),                                                                   \
 221:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (wbase),                                                                  \
 222:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (wend),                                                                   \
 223:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (prio),                                                                   \
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (funcp),                                                                  \
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (arg),                                                                    \
 226:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (oip)                                                                     \
 227:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 228:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /** @} */
 229:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 230:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 231:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @name    Macro Functions
 232:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @{
 233:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 234:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 235:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 236:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 237:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          system tick clock.
 238:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 239:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 240:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 241:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          converted.
 242:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 243:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] sec       time in seconds, must be different from zero
 244:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 245:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @api
 246:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 247:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define chThdSleepSeconds(sec) chThdSleep(TIME_S2I(sec))
 248:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 249:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 250:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          milliseconds.
 252:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 253:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          system tick clock.
 254:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 255:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 256:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 257:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          converted.
 258:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 259:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] msec      time in milliseconds, must be different from zero
 260:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 261:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @api
 262:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 263:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define chThdSleepMilliseconds(msec) chThdSleep(TIME_MS2I(msec))
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Delays the invoking thread for the specified number of
 267:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          microseconds.
 268:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    The specified time is rounded up to a value allowed by the real
 269:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          system tick clock.
 270:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    The maximum specifiable value is implementation dependent.
 271:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    Use of this macro for large values is not secure because
 272:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          integer overflows, make sure your value can be correctly
 273:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          converted.
 274:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 275:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] usec      time in microseconds, must be different from zero
 276:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 277:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @api
 278:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 279:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #define chThdSleepMicroseconds(usec) chThdSleep(TIME_US2I(usec))
 280:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /** @} */
 281:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 282:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* External declarations.                                                    */
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
 285:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 286:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #ifdef __cplusplus
 287:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** extern "C" {
 288:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 289:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****    thread_t *__thd_object_init(os_instance_t *oip,
 290:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****                                thread_t *tp,
 291:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****                                const char *name,
 292:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****                                tprio_t prio);
 293:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if CH_DBG_FILL_THREADS == TRUE
 294:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void __thd_stackfill(uint8_t *startp, uint8_t *endp);
 295:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 296:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspendedI(const thread_descriptor_t *tdp);
 297:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdCreateSuspended(const thread_descriptor_t *tdp);
 298:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdCreateI(const thread_descriptor_t *tdp);
 299:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdCreate(const thread_descriptor_t *tdp);
 300:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdCreateStatic(void *wsp, size_t size,
 301:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****                               tprio_t prio, tfunc_t pf, void *arg);
 302:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdStart(thread_t *tp);
 303:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if CH_CFG_USE_REGISTRY == TRUE
 304:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *chThdAddRef(thread_t *tp);
 305:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdRelease(thread_t *tp);
 306:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 307:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdExit(msg_t msg);
 308:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdExitS(msg_t msg);
 309:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if CH_CFG_USE_WAITEXIT == TRUE
 310:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   msg_t chThdWait(thread_t *tp);
 311:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 312:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   tprio_t chThdSetPriority(tprio_t newprio);
 313:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdTerminate(thread_t *tp);
 314:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   msg_t chThdSuspendS(thread_reference_t *trp);
 315:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout);
 316:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdResumeI(thread_reference_t *trp, msg_t msg);
 317:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdResumeS(thread_reference_t *trp, msg_t msg);
 318:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdResume(thread_reference_t *trp, msg_t msg);
 319:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout);
 320:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg);
 321:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg);
 322:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdSleep(sysinterval_t time);
 323:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdSleepUntil(systime_t time);
 324:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next);
 325:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   void chThdYield(void);
 326:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #ifdef __cplusplus
 327:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 328:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 329:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 330:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
 331:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /* Module inline functions.                                                  */
 332:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /*===========================================================================*/
 333:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 334:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 335:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Returns a pointer to the current @p thread_t.
 336:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 337:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return             A pointer to the current thread.
 338:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 339:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @xclass
 340:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 341:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline thread_t *chThdGetSelfX(void) {
 342:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return __sch_get_currthread();
 850               		.loc 4 343 0
 851 0008 C091 0000 		lds r28,ch0+5
 852 000c D091 0000 		lds r29,ch0+5+1
 853               	.LBE321:
 854               	.LBE320:
 506:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *currtp = chThdGetSelfX();
 507:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 508:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Storing exit message.*/
 509:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   currtp->u.exitcode = msg;
 855               		.loc 1 509 0
 856 0010 9B8B      		std Y+19,r25
 857 0012 8A8B      		std Y+18,r24
 510:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 511:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Exit handler hook.*/
 512:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   CH_CFG_THREAD_EXIT_HOOK(tp);
 513:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 514:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_WAITEXIT == TRUE
 515:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Waking up any waiting thread.*/
 516:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   while (unlikely(ch_list_notempty(&currtp->waiting))) {
 858               		.loc 1 516 0
 859 0014 8E01      		movw r16,r28
 860 0016 0C5E      		subi r16,-20
 861 0018 1F4F      		sbci r17,-1
 862               	.LVL61:
 863               	.LBB322:
 864               	.LBB323:
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 865               		.loc 2 181 0
 866 001a 8C89      		ldd r24,Y+20
 867 001c 9D89      		ldd r25,Y+21
 868               	.LVL62:
 869               	.LBE323:
 870               	.LBE322:
 871               		.loc 1 516 0
 872 001e 0817      		cp r16,r24
 873 0020 1907      		cpc r17,r25
 874 0022 01F0      		breq .L15
 875               	.LVL63:
 876               	.L16:
 877               	.LBB325:
 878               	.LBB326:
 210:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 879               		.loc 2 210 0
 880 0024 FC01      		movw r30,r24
 881 0026 2081      		ld r18,Z
 882 0028 3181      		ldd r19,Z+1
 883 002a 3D8B      		std Y+21,r19
 884 002c 2C8B      		std Y+20,r18
 885               	.LVL64:
 886               	.LBE326:
 887               	.LBE325:
 517:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     (void) chSchReadyI(threadref(ch_list_unlink(&currtp->waiting)));
 888               		.loc 1 517 0
 889 002e 0E94 0000 		call chSchReadyI
 890               	.LVL65:
 891               	.LBB327:
 892               	.LBB324:
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 893               		.loc 2 181 0
 894 0032 8C89      		ldd r24,Y+20
 895 0034 9D89      		ldd r25,Y+21
 896               	.LVL66:
 897               	.LBE324:
 898               	.LBE327:
 516:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     (void) chSchReadyI(threadref(ch_list_unlink(&currtp->waiting)));
 899               		.loc 1 516 0
 900 0036 8017      		cp r24,r16
 901 0038 9107      		cpc r25,r17
 902 003a 01F4      		brne .L16
 903               	.L15:
 518:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 519:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 520:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 521:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 522:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (unlikely(currtp->refs == (trefs_t)0)) {
 904               		.loc 1 522 0
 905 003c 8989      		ldd r24,Y+17
 906 003e 8111      		cpse r24,__zero_reg__
 907 0040 00C0      		rjmp .L17
 908               	.LVL67:
 909               	.LBB328:
 910               	.LBB329:
 320:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->next->prev = p->prev;
 911               		.loc 2 320 0
 912 0042 E985      		ldd r30,Y+9
 913 0044 FA85      		ldd r31,Y+10
 914 0046 8F81      		ldd r24,Y+7
 915 0048 9885      		ldd r25,Y+8
 916 004a 9183      		std Z+1,r25
 917 004c 8083      		st Z,r24
 918               		.loc 2 321 0
 919 004e AF81      		ldd r26,Y+7
 920 0050 B885      		ldd r27,Y+8
 921 0052 1396      		adiw r26,2+1
 922 0054 FC93      		st X,r31
 923 0056 EE93      		st -X,r30
 924 0058 1297      		sbiw r26,2
 925               	.LVL68:
 926               	.L17:
 927               	.LBE329:
 928               	.LBE328:
 523:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_DYNAMIC == TRUE
 524:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     /* Static threads are immediately removed from the registry because there
 525:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****        is no memory to recover.*/
 526:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     if (unlikely(((currtp->flags & CH_FLAG_MODE_MASK) == CH_FLAG_MODE_STATIC))) {
 527:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       REG_REMOVE(currtp);
 528:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     }
 529:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #else
 530:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     REG_REMOVE(currtp);
 531:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 532:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 533:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 534:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 535:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Going into final state.*/
 536:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_FINAL);
 929               		.loc 1 536 0
 930 005a 8FE0      		ldi r24,lo8(15)
 931               	/* epilogue start */
 537:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 538:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 539:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(false, "zombies apocalypse");
 540:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 932               		.loc 1 540 0
 933 005c DF91      		pop r29
 934 005e CF91      		pop r28
 935 0060 1F91      		pop r17
 936 0062 0F91      		pop r16
 536:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 937               		.loc 1 536 0
 938 0064 0C94 0000 		jmp chSchGoSleepS
 939               	.LVL69:
 940               		.cfi_endproc
 941               	.LFE205:
 943               		.section	.text.chThdExit,"ax",@progbits
 944               	.global	chThdExit
 946               	chThdExit:
 947               	.LFB204:
 481:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 948               		.loc 1 481 0
 949               		.cfi_startproc
 950               	.LVL70:
 951               	/* prologue: function */
 952               	/* frame size = 0 */
 953               	/* stack size = 0 */
 954               	.L__stack_usage = 0
 955               	.LBB330:
 956               	.LBB331:
 957               	.LBB332:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 958               		.loc 3 430 0
 959               	/* #APP */
 960               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 961 0000 F894      		cli
 962               	 ;  0 "" 2
 963               	/* #NOAPP */
 964               	.LBE332:
 965               	.LBE331:
 966               	.LBE330:
 484:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* The thread never returns here.*/
 967               		.loc 1 484 0
 968 0002 0C94 0000 		jmp chThdExitS
 969               	.LVL71:
 970               		.cfi_endproc
 971               	.LFE204:
 973               		.section	.text.chThdWait,"ax",@progbits
 974               	.global	chThdWait
 976               	chThdWait:
 977               	.LFB206:
 541:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 542:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if (CH_CFG_USE_WAITEXIT == TRUE) || defined(__DOXYGEN__)
 543:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 544:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Blocks the execution of the invoking thread until the specified
 545:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          thread terminates then the exit code is returned.
 546:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details This function waits for the specified thread to terminate then
 547:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          decrements its reference counter, if the counter reaches zero then
 548:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the thread working area is returned to the proper allocator and
 549:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          the thread is removed from registry.
 550:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @pre     The configuration option @p CH_CFG_USE_WAITEXIT must be enabled in
 551:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          order to use this function.
 552:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    Enabling @p chThdWait() requires 2-4 (depending on the
 553:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          architecture) extra bytes in the @p thread_t structure.
 554:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    If @p CH_CFG_USE_DYNAMIC is not specified this function just waits
 555:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          for the thread termination, no memory allocators are involved.
 556:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 557:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 558:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The exit code from the terminated thread.
 559:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 560:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 561:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 562:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** msg_t chThdWait(thread_t *tp) {
 978               		.loc 1 562 0
 979               		.cfi_startproc
 980               	.LVL72:
 981 0000 0F93      		push r16
 982               	.LCFI16:
 983               		.cfi_def_cfa_offset 3
 984               		.cfi_offset 16, -2
 985 0002 1F93      		push r17
 986               	.LCFI17:
 987               		.cfi_def_cfa_offset 4
 988               		.cfi_offset 17, -3
 989 0004 CF93      		push r28
 990               	.LCFI18:
 991               		.cfi_def_cfa_offset 5
 992               		.cfi_offset 28, -4
 993 0006 DF93      		push r29
 994               	.LCFI19:
 995               		.cfi_def_cfa_offset 6
 996               		.cfi_offset 29, -5
 997               	/* prologue: function */
 998               	/* frame size = 0 */
 999               	/* stack size = 4 */
 1000               	.L__stack_usage = 4
 1001 0008 EC01      		movw r28,r24
 1002               	.LBB333:
 1003               	.LBB334:
 1004               		.loc 4 343 0
 1005 000a E091 0000 		lds r30,ch0+5
 1006 000e F091 0000 		lds r31,ch0+5+1
 1007               	.LBE334:
 1008               	.LBE333:
 1009               	.LBB335:
 1010               	.LBB336:
 1011               	.LBB337:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1012               		.loc 3 430 0
 1013               	/* #APP */
 1014               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1015 0012 F894      		cli
 1016               	 ;  0 "" 2
 1017               	/* #NOAPP */
 1018               	.LBE337:
 1019               	.LBE336:
 1020               	.LBE335:
 563:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *currtp = chThdGetSelfX();
 564:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   msg_t msg;
 565:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 566:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheck(tp != NULL);
 567:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 568:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 569:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(tp != currtp, "waiting self");
 570:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 571:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(tp->refs > (trefs_t)0, "no references");
 572:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 573:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 574:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (likely(tp->state != CH_STATE_FINAL)) {
 1021               		.loc 1 574 0
 1022 0014 8F85      		ldd r24,Y+15
 1023               	.LVL73:
 1024 0016 8F30      		cpi r24,lo8(15)
 1025 0018 01F0      		breq .L21
 1026               	.LVL74:
 1027               	.LBB338:
 1028               	.LBB339:
 194:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   lp->next = p;
 1029               		.loc 2 194 0
 1030 001a 8C89      		ldd r24,Y+20
 1031 001c 9D89      		ldd r25,Y+21
 1032 001e 9183      		std Z+1,r25
 1033 0020 8083      		st Z,r24
 195:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 1034               		.loc 2 195 0
 1035 0022 FD8B      		std Y+21,r31
 1036 0024 EC8B      		std Y+20,r30
 1037               	.LVL75:
 1038               	.LBE339:
 1039               	.LBE338:
 575:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     ch_list_link(&tp->waiting, &currtp->hdr.list);
 576:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chSchGoSleepS(CH_STATE_WTEXIT);
 1040               		.loc 1 576 0
 1041 0026 89E0      		ldi r24,lo8(9)
 1042 0028 0E94 0000 		call chSchGoSleepS
 1043               	.LVL76:
 1044               	.L21:
 577:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 578:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   msg = tp->u.exitcode;
 1045               		.loc 1 578 0
 1046 002c 0A89      		ldd r16,Y+18
 1047 002e 1B89      		ldd r17,Y+19
 1048               	.LVL77:
 1049               	.LBB340:
 1050               	.LBB341:
 1051               	.LBB342:
 1052               	.LBB343:
 1053               		.loc 3 440 0
 1054               	/* #APP */
 1055               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1056 0030 7894      		sei
 1057               	 ;  0 "" 2
 1058               	/* #NOAPP */
 1059               	.LBE343:
 1060               	.LBE342:
 1061               	.LBE341:
 1062               	.LBE340:
 579:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 580:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 581:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_REGISTRY == TRUE
 582:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   /* Releasing a reference to the thread.*/
 583:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chThdRelease(tp);
 1063               		.loc 1 583 0
 1064 0032 CE01      		movw r24,r28
 1065 0034 0E94 0000 		call chThdRelease
 1066               	.LVL78:
 584:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 585:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 586:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return msg;
 587:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1067               		.loc 1 587 0
 1068 0038 C801      		movw r24,r16
 1069               	/* epilogue start */
 1070 003a DF91      		pop r29
 1071 003c CF91      		pop r28
 1072               	.LVL79:
 1073 003e 1F91      		pop r17
 1074 0040 0F91      		pop r16
 1075               	.LVL80:
 1076 0042 0895      		ret
 1077               		.cfi_endproc
 1078               	.LFE206:
 1080               		.section	.text.chThdSetPriority,"ax",@progbits
 1081               	.global	chThdSetPriority
 1083               	chThdSetPriority:
 1084               	.LFB207:
 588:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif /* CH_CFG_USE_WAITEXIT */
 589:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 590:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 591:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Changes the running thread priority level then reschedules if
 592:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          necessary.
 593:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    The function returns the real thread priority regardless of the
 594:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          current priority that could be higher than the real priority
 595:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          because the priority inheritance mechanism.
 596:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 597:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] newprio   the new priority level of the running thread
 598:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The old priority level.
 599:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 600:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 601:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 602:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** tprio_t chThdSetPriority(tprio_t newprio) {
 1085               		.loc 1 602 0
 1086               		.cfi_startproc
 1087               	.LVL81:
 1088 0000 CF93      		push r28
 1089               	.LCFI20:
 1090               		.cfi_def_cfa_offset 3
 1091               		.cfi_offset 28, -2
 1092               	/* prologue: function */
 1093               	/* frame size = 0 */
 1094               	/* stack size = 1 */
 1095               	.L__stack_usage = 1
 1096               	.LBB344:
 1097               	.LBB345:
 1098               		.loc 4 343 0
 1099 0002 E091 0000 		lds r30,ch0+5
 1100 0006 F091 0000 		lds r31,ch0+5+1
 1101               	.LBE345:
 1102               	.LBE344:
 1103               	.LBB346:
 1104               	.LBB347:
 1105               	.LBB348:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1106               		.loc 3 430 0
 1107               	/* #APP */
 1108               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1109 000a F894      		cli
 1110               	 ;  0 "" 2
 1111               	/* #NOAPP */
 1112               	.LBE348:
 1113               	.LBE347:
 1114               	.LBE346:
 603:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *currtp = chThdGetSelfX();
 604:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tprio_t oldprio;
 605:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 606:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgCheck(newprio <= HIGHPRIO);
 607:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 608:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 609:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #if CH_CFG_USE_MUTEXES == TRUE
 610:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   oldprio = currtp->realprio;
 1115               		.loc 1 610 0
 1116 000c C58D      		ldd r28,Z+29
 1117               	.LVL82:
 611:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if ((currtp->hdr.pqueue.prio == currtp->realprio) ||
 1118               		.loc 1 611 0
 1119 000e 9481      		ldd r25,Z+4
 1120 0010 9C17      		cp r25,r28
 1121 0012 01F0      		breq .L26
 1122               		.loc 1 611 0 is_stmt 0 discriminator 1
 1123 0014 9817      		cp r25,r24
 1124 0016 00F4      		brsh .L27
 1125               	.L26:
 612:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****       (newprio > currtp->hdr.pqueue.prio)) {
 613:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     currtp->hdr.pqueue.prio = newprio;
 1126               		.loc 1 613 0 is_stmt 1
 1127 0018 8483      		std Z+4,r24
 1128               	.L27:
 614:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 615:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   currtp->realprio = newprio;
 1129               		.loc 1 615 0
 1130 001a 858F      		std Z+29,r24
 616:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #else
 617:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   oldprio = currtp->hdr.pqueue.prio;
 618:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   currtp->hdr.pqueue.prio = newprio;
 619:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** #endif
 620:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchRescheduleS();
 1131               		.loc 1 620 0
 1132 001c 0E94 0000 		call chSchRescheduleS
 1133               	.LVL83:
 1134               	.LBB349:
 1135               	.LBB350:
 1136               	.LBB351:
 1137               	.LBB352:
 1138               		.loc 3 440 0
 1139               	/* #APP */
 1140               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1141 0020 7894      		sei
 1142               	 ;  0 "" 2
 1143               	/* #NOAPP */
 1144               	.LBE352:
 1145               	.LBE351:
 1146               	.LBE350:
 1147               	.LBE349:
 621:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 622:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 623:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return oldprio;
 624:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1148               		.loc 1 624 0
 1149 0022 8C2F      		mov r24,r28
 1150               	/* epilogue start */
 1151 0024 CF91      		pop r28
 1152               	.LVL84:
 1153 0026 0895      		ret
 1154               		.cfi_endproc
 1155               	.LFE207:
 1157               		.section	.text.chThdTerminate,"ax",@progbits
 1158               	.global	chThdTerminate
 1160               	chThdTerminate:
 1161               	.LFB208:
 625:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 626:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 627:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Requests a thread termination.
 628:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @pre     The target thread must be written to invoke periodically
 629:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p chThdShouldTerminate() and terminate cleanly if it returns
 630:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          @p true.
 631:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @post    The specified thread will terminate after detecting the termination
 632:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          condition.
 633:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 634:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tp        pointer to the thread
 635:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 636:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 637:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 638:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdTerminate(thread_t *tp) {
 1162               		.loc 1 638 0
 1163               		.cfi_startproc
 1164               	.LVL85:
 1165               	/* prologue: function */
 1166               	/* frame size = 0 */
 1167               	/* stack size = 0 */
 1168               	.L__stack_usage = 0
 1169 0000 FC01      		movw r30,r24
 1170               	.LBB353:
 1171               	.LBB354:
 1172               	.LBB355:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1173               		.loc 3 430 0
 1174               	/* #APP */
 1175               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1176 0002 F894      		cli
 1177               	 ;  0 "" 2
 1178               	/* #NOAPP */
 1179               	.LBE355:
 1180               	.LBE354:
 1181               	.LBE353:
 639:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 640:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 641:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->flags |= CH_FLAG_TERMINATE;
 1182               		.loc 1 641 0
 1183 0004 9089      		ldd r25,Z+16
 1184 0006 9460      		ori r25,lo8(4)
 1185 0008 908B      		std Z+16,r25
 1186               	.LBB356:
 1187               	.LBB357:
 1188               	.LBB358:
 1189               	.LBB359:
 1190               		.loc 3 440 0
 1191               	/* #APP */
 1192               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1193 000a 7894      		sei
 1194               	 ;  0 "" 2
 1195               	/* epilogue start */
 1196               	/* #NOAPP */
 1197               	.LBE359:
 1198               	.LBE358:
 1199               	.LBE357:
 1200               	.LBE356:
 642:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 643:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1201               		.loc 1 643 0
 1202 000c 0895      		ret
 1203               		.cfi_endproc
 1204               	.LFE208:
 1206               		.section	.text.chThdSleep,"ax",@progbits
 1207               	.global	chThdSleep
 1209               	chThdSleep:
 1210               	.LFB209:
 644:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 645:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 646:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread for the specified time.
 647:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 648:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] time      the delay in system ticks, the special values are
 649:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      handled as follow:
 650:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 651:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        state.
 652:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 653:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      .
 654:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 655:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 656:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 657:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdSleep(sysinterval_t time) {
 1211               		.loc 1 657 0
 1212               		.cfi_startproc
 1213               	.LVL86:
 1214               	/* prologue: function */
 1215               	/* frame size = 0 */
 1216               	/* stack size = 0 */
 1217               	.L__stack_usage = 0
 1218 0000 AB01      		movw r20,r22
 1219 0002 BC01      		movw r22,r24
 1220               	.LVL87:
 1221               	.LBB360:
 1222               	.LBB361:
 1223               	.LBB362:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1224               		.loc 3 430 0
 1225               	/* #APP */
 1226               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1227 0004 F894      		cli
 1228               	 ;  0 "" 2
 1229               	.LVL88:
 1230               	/* #NOAPP */
 1231               	.LBE362:
 1232               	.LBE361:
 1233               	.LBE360:
 1234               	.LBB363:
 1235               	.LBB364:
 344:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 345:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 346:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 347:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Returns the current thread priority.
 348:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    Can be invoked in any context.
 349:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 350:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return              The current thread priority.
 351:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 352:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @xclass
 353:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 354:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline tprio_t chThdGetPriorityX(void) {
 355:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 356:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return chThdGetSelfX()->hdr.pqueue.prio;
 357:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 358:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 359:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 360:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Returns the number of ticks consumed by the specified thread.
 361:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @note    This function is only available when the
 362:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          @p CH_DBG_THREADS_PROFILING configuration option is enabled.
 363:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 364:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 365:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return              The number of consumed system ticks.
 366:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 367:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @xclass
 368:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 369:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if (CH_DBG_THREADS_PROFILING == TRUE) || defined(__DOXYGEN__)
 370:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline systime_t chThdGetTicksX(thread_t *tp) {
 371:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 372:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return tp->time;
 373:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 374:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif
 375:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 376:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #if (CH_DBG_ENABLE_STACK_CHECK == TRUE) || (CH_CFG_USE_DYNAMIC == TRUE) ||  \
 377:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****     defined(__DOXYGEN__)
 378:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 379:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Returns the working area base of the specified thread.
 380:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 381:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 382:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return              The working area base pointer.
 383:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 384:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @xclass
 385:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 386:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline stkalign_t *chThdGetWorkingAreaX(thread_t *tp) {
 387:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 388:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return tp->wabase;
 389:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 390:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** #endif /* CH_DBG_ENABLE_STACK_CHECK == TRUE */
 391:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 392:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 393:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Verifies if the specified thread is in the @p CH_STATE_FINAL state.
 394:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 395:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 396:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @retval true         thread terminated.
 397:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @retval false        thread not terminated.
 398:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 399:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @xclass
 400:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 401:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline bool chThdTerminatedX(thread_t *tp) {
 402:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 403:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return (bool)(tp->state == CH_STATE_FINAL);
 404:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 405:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 406:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 407:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Verifies if the current thread has a termination request pending.
 408:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 409:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @retval true         termination request pending.
 410:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @retval false        termination request not pending.
 411:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 412:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @xclass
 413:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 414:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline bool chThdShouldTerminateX(void) {
 415:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 416:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return (bool)((chThdGetSelfX()->flags & CH_FLAG_TERMINATE) != (tmode_t)0);
 417:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 418:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 419:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 420:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Resumes a thread created with @p chThdCreateI().
 421:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 422:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] tp        pointer to the thread
 423:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return              The pointer to the @p thread_t structure allocated for
 424:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *                      the thread into the working space area.
 425:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 426:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @iclass
 427:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 428:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline thread_t *chThdStartI(thread_t *tp) {
 429:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_WTSTART, "wrong state");
 431:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 432:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return chSchReadyI(tp);
 433:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 434:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 435:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 436:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Suspends the invoking thread for the specified number of ticks.
 437:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 438:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] ticks     the delay in system ticks, the special values are
 439:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *                      handled as follow:
 440:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 441:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *                        state.
 442:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 443:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *                      .
 444:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 445:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @sclass
 446:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 447:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline void chThdSleepS(sysinterval_t ticks) {
 448:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 449:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   chDbgCheck(ticks != TIME_IMMEDIATE);
 450:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 451:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (void) chSchGoSleepTimeoutS(CH_STATE_SLEEPING, ticks);
 1236               		.loc 4 451 0
 1237 0006 88E0      		ldi r24,lo8(8)
 1238 0008 0E94 0000 		call chSchGoSleepTimeoutS
 1239               	.LVL89:
 1240               	.LBE364:
 1241               	.LBE363:
 1242               	.LBB365:
 1243               	.LBB366:
 1244               	.LBB367:
 1245               	.LBB368:
 1246               		.loc 3 440 0
 1247               	/* #APP */
 1248               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1249 000c 7894      		sei
 1250               	 ;  0 "" 2
 1251               	/* epilogue start */
 1252               	/* #NOAPP */
 1253               	.LBE368:
 1254               	.LBE367:
 1255               	.LBE366:
 1256               	.LBE365:
 658:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 659:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 660:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chThdSleepS(time);
 661:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 662:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1257               		.loc 1 662 0
 1258 000e 0895      		ret
 1259               		.cfi_endproc
 1260               	.LFE209:
 1262               		.section	.text.chThdSleepUntil,"ax",@progbits
 1263               	.global	chThdSleepUntil
 1265               	chThdSleepUntil:
 1266               	.LFB210:
 663:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 664:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 665:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread until the system time arrives to the
 666:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          specified value.
 667:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    The function has no concept of "past", all specifiable times
 668:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          are in the future, this means that if you call this function
 669:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          exceeding your calculated intervals then the function will
 670:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          return in a far future time, not immediately.
 671:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @see     chThdSleepUntilWindowed()
 672:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 673:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] time      absolute system time
 674:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 675:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 676:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 677:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdSleepUntil(systime_t time) {
 1267               		.loc 1 677 0
 1268               		.cfi_startproc
 1269               	.LVL90:
 1270 0000 CF93      		push r28
 1271               	.LCFI21:
 1272               		.cfi_def_cfa_offset 3
 1273               		.cfi_offset 28, -2
 1274 0002 DF93      		push r29
 1275               	.LCFI22:
 1276               		.cfi_def_cfa_offset 4
 1277               		.cfi_offset 29, -3
 1278               	/* prologue: function */
 1279               	/* frame size = 0 */
 1280               	/* stack size = 2 */
 1281               	.L__stack_usage = 2
 1282 0004 EC01      		movw r28,r24
 1283               	.LBB369:
 1284               	.LBB370:
 1285               	.LBB371:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1286               		.loc 3 430 0
 1287               	/* #APP */
 1288               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1289 0006 F894      		cli
 1290               	 ;  0 "" 2
 1291               	/* #NOAPP */
 1292               	.LBE371:
 1293               	.LBE370:
 1294               	.LBE369:
 1295               	.LBB372:
 1296               	.LBB373:
 1297               	.LBB374:
 1298               		.file 5 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_time
   1:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*
   2:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
   4:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     you may not use this file except in compliance with the License.
   6:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     You may obtain a copy of the License at
   7:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
   8:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  10:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     Unless required by applicable law or agreed to in writing, software
  11:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     See the License for the specific language governing permissions and
  14:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****     limitations under the License.
  15:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** */
  16:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  17:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /**
  18:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @file    osal/rt-nil//chcore_timer.h
  19:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @brief   System Timer bindings header file.
  20:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
  21:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @addtogroup OSAL_CHCORE_TIMER
  22:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @{
  23:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  */
  24:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  25:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** #ifndef CHCORE_TIMER_H
  26:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** #define CHCORE_TIMER_H
  27:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  28:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  29:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* Module constants.                                                         */
  30:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  31:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  32:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  33:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* Module pre-compile time settings.                                         */
  34:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  35:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  36:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  37:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* Derived constants and error checks.                                       */
  38:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  39:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  40:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  41:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* Module data structures and types.                                         */
  42:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  43:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  44:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  45:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* Module macros.                                                            */
  46:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  47:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  48:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  49:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* External declarations.                                                    */
  50:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  51:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  52:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** #ifdef __cplusplus
  53:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** extern "C" {
  54:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** #endif
  55:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   void stStartAlarm(systime_t time);
  56:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   void stStopAlarm(void);
  57:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   void stSetAlarm(systime_t time);
  58:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   systime_t stGetCounter(void);
  59:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   systime_t stGetAlarm(void);
  60:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** #ifdef __cplusplus
  61:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** }
  62:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** #endif
  63:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  64:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  65:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /* Module inline functions.                                                  */
  66:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /*===========================================================================*/
  67:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  68:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /**
  69:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @brief   Starts the alarm.
  70:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @note    Makes sure that no spurious alarms are triggered after
  71:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *          this call.
  72:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
  73:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @param[in] time      the time to be set for the first alarm
  74:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
  75:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @notapi
  76:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  */
  77:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** static inline void port_timer_start_alarm(systime_t time) {
  78:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  79:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   stStartAlarm(time);
  80:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** }
  81:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  82:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /**
  83:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @brief   Stops the alarm interrupt.
  84:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
  85:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @notapi
  86:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  */
  87:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** static inline void port_timer_stop_alarm(void) {
  88:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  89:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   stStopAlarm();
  90:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** }
  91:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
  92:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /**
  93:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @brief   Sets the alarm time.
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @param[in] time      the time to be set for the next alarm
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @notapi
  98:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  */
  99:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** static inline void port_timer_set_alarm(systime_t time) {
 100:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
 101:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   stSetAlarm(time);
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** }
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
 104:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** /**
 105:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @brief   Returns the system time.
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
 107:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @return              The system time.
 108:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  *
 109:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  * @notapi
 110:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****  */
 111:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** static inline systime_t port_timer_get_time(void) {
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h **** 
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/hal/osal/rt-nil/chcore_timer.h ****   return stGetCounter();
 1299               		.loc 5 113 0
 1300 0008 0E94 0000 		call stGetCounter
 1301               	.LVL91:
 1302               	.LBE374:
 1303               	.LBE373:
 1304               	.LBE372:
 1305               	.LBB375:
 1306               	.LBB376:
 1307               		.file 6 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h"
   1:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*
   2:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
   5:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     This file is part of ChibiOS.
   6:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
   7:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     it under the terms of the GNU General Public License as published by
   9:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     the Free Software Foundation version 3 of the License.
  10:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  11:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     GNU General Public License for more details.
  15:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  16:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     You should have received a copy of the GNU General Public License
  17:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** */
  19:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  20:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
  21:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @file    rt/include/chtime.h
  22:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time and intervals macros and structures.
  23:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
  24:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @addtogroup time_intervals
  25:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details This module is responsible for handling of system time and time
  26:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          intervals.
  27:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @{
  28:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
  29:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  30:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #ifndef CHTIME_H
  31:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define CHTIME_H
  32:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  33:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  34:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* Module constants.                                                         */
  35:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  36:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  37:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
  38:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @name    Special time constants
  39:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @{
  40:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
  41:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
  42:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Zero interval specification for some functions with a timeout
  43:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          specification.
  44:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_IMMEDIATE as timeout parameter,
  45:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          see the specific function documentation.
  46:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
  47:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_IMMEDIATE      ((sysinterval_t)0)
  48:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  49:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
  50:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Infinite interval specification for all functions with a timeout
  51:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          specification.
  52:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Not all functions accept @p TIME_INFINITE as timeout parameter,
  53:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          see the specific function documentation.
  54:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
  55:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_INFINITE       ((sysinterval_t)-1)
  56:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  57:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
  58:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Maximum interval constant usable as timeout.
  59:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
  60:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_MAX_INTERVAL   ((sysinterval_t)-2)
  61:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  62:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
  63:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Maximum system of system time before it wraps.
  64:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
  65:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_MAX_SYSTIME    ((systime_t)-1)
  66:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /** @} */
  67:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  68:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  69:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* Module pre-compile time settings.                                         */
  70:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  71:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  72:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  73:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* Derived constants and error checks.                                       */
  74:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  75:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  76:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION != 16) && (CH_CFG_ST_RESOLUTION != 32) &&         \
  77:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     (CH_CFG_ST_RESOLUTION != 64)
  78:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_RESOLUTION specified, must be 16, 32 or 64"
  79:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
  80:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  81:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if CH_CFG_ST_FREQUENCY < 10
  82:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #error "invalid CH_CFG_ST_FREQUENCY specified, must be >= 10"
  83:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
  84:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  85:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE != 16) && (CH_CFG_INTERVALS_SIZE != 32) &&       \
  86:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     (CH_CFG_INTERVALS_SIZE != 64)
  87:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #error "invalid CH_CFG_INTERVALS_SIZE specified, must be 16, 32 or 64"
  88:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
  89:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  90:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE != 16) && (CH_CFG_TIME_TYPES_SIZE != 32)
  91:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #error "invalid CH_CFG_TIME_TYPES_SIZE specified, must be 16 or 32"
  92:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
  93:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  94:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if CH_CFG_INTERVALS_SIZE < CH_CFG_ST_RESOLUTION
  95:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #error "CH_CFG_INTERVALS_SIZE must be >= CH_CFG_ST_RESOLUTION"
  96:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
  97:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
  98:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
  99:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* Module data structures and types.                                         */
 100:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 101:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 102:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 103:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of system time.
 104:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 105:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 106:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if (CH_CFG_ST_RESOLUTION == 64) || defined(__DOXYGEN__)
 107:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint64_t systime_t;
 108:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 32
 109:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint32_t systime_t;
 110:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #elif CH_CFG_ST_RESOLUTION == 16
 111:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint16_t systime_t;
 112:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
 113:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 114:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 115:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of time interval.
 116:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16, 32 or 64 bits.
 117:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 118:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if (CH_CFG_INTERVALS_SIZE == 64) || defined(__DOXYGEN__)
 119:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint64_t sysinterval_t;
 120:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 32
 121:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint32_t sysinterval_t;
 122:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #elif CH_CFG_INTERVALS_SIZE == 16
 123:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint16_t sysinterval_t;
 124:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
 125:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 126:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 127:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of a time stamp.
 128:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 129:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint64_t systimestamp_t;
 130:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 131:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if (CH_CFG_TIME_TYPES_SIZE == 32) || defined(__DOXYGEN__)
 132:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 133:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of seconds.
 134:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 135:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 136:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint32_t time_secs_t;
 137:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 138:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 139:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of milliseconds.
 140:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 141:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 142:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint32_t time_msecs_t;
 143:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 144:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 145:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of microseconds.
 146:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    It is selectable in configuration between 16 or 32 bits.
 147:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 148:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint32_t time_usecs_t;
 149:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 150:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 151:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Type of time conversion variable.
 152:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    This type must have double width than other time types, it is
 153:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          only used internally for conversions.
 154:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 155:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint64_t time_conv_t;
 156:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 157:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #else
 158:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint16_t time_secs_t;
 159:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint16_t time_msecs_t;
 160:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint16_t time_usecs_t;
 161:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** typedef uint32_t time_conv_t;
 162:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
 163:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 164:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 165:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* Module macros.                                                            */
 166:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 167:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 168:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 169:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @name    Fast time conversion utilities
 170:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @{
 171:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 172:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 173:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 174:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 175:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 176:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 177:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 178:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          converted.
 179:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 180:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 181:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of ticks.
 182:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 183:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @api
 184:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 185:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_S2I(secs)                                                      \
 186:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   ((sysinterval_t)((time_conv_t)(secs) * (time_conv_t)CH_CFG_ST_FREQUENCY))
 187:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 188:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 189:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 190:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 191:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 192:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 193:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 194:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          converted.
 195:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 196:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] msecs     number of milliseconds
 197:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of ticks.
 198:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 199:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @api
 200:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 201:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_MS2I(msecs)                                                    \
 202:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(msecs) *                                 \
 203:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 204:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                     (time_conv_t)999) / (time_conv_t)1000))
 205:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 206:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 207:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 208:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 209:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 210:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 211:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 212:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          converted.
 213:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 214:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] usecs     number of microseconds
 215:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of ticks.
 216:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 217:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @api
 218:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 219:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_US2I(usecs)                                                    \
 220:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   ((sysinterval_t)((((time_conv_t)(usecs) *                                 \
 221:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                      (time_conv_t)CH_CFG_ST_FREQUENCY) +                    \
 222:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                     (time_conv_t)999999) / (time_conv_t)1000000))
 223:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 224:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 225:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 226:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from system ticks number to seconds.
 227:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 228:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 229:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 230:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          converted.
 231:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 232:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 233:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of seconds.
 234:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 235:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @api
 236:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 237:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_I2S(interval)                                                  \
 238:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   (time_secs_t)(((time_conv_t)(interval) +                                  \
 239:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY -                         \
 240:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                  (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY)
 241:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 242:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 243:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 244:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from system ticks number to milliseconds.
 245:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 246:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 247:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 248:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          converted.
 249:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 250:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 252:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 253:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @api
 254:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 255:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_I2MS(interval)                                                 \
 256:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   (time_msecs_t)((((time_conv_t)(interval) * (time_conv_t)1000) +           \
 257:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 258:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 259:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 260:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 261:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 262:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from system ticks number to microseconds.
 263:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    Use of this macro for large values is not secure because
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          integer overflows, make sure your value can be correctly
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          converted.
 267:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 268:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 269:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 270:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 271:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @api
 272:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 273:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #define TIME_I2US(interval)                                                 \
 274:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   (time_usecs_t)((((time_conv_t)(interval) * (time_conv_t)1000000) +        \
 275:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                   (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /      \
 276:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                  (time_conv_t)CH_CFG_ST_FREQUENCY)
 277:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /** @} */
 278:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 279:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 280:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* External declarations.                                                    */
 281:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 282:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #ifdef __cplusplus
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** extern "C" {
 285:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
 286:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 287:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #ifdef __cplusplus
 288:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 289:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
 290:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 291:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 292:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /* Module inline functions.                                                  */
 293:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /*===========================================================================*/
 294:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 295:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 296:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @name    Secure time conversion utilities
 297:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @{
 298:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 299:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 300:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Seconds to time interval.
 301:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from seconds to system ticks number.
 302:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 303:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 304:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] secs      number of seconds
 305:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of ticks.
 306:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 307:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @special
 308:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 309:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline sysinterval_t chTimeS2I(time_secs_t secs) {
 310:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   time_conv_t ticks;
 311:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 312:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   ticks = (time_conv_t)secs * (time_conv_t)CH_CFG_ST_FREQUENCY;
 313:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 314:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 315:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               "conversion overflow");
 316:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 317:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 318:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 319:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 320:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 321:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Milliseconds to time interval.
 322:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from milliseconds to system ticks number.
 323:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 325:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] msec      number of milliseconds
 326:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of ticks.
 327:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 328:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @special
 329:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 330:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline sysinterval_t chTimeMS2I(time_msecs_t msec) {
 331:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   time_conv_t ticks;
 332:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 333:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   ticks = (((time_conv_t)msec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 334:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****            (time_conv_t)999) / (time_conv_t)1000;
 335:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 336:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 337:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               "conversion overflow");
 338:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 339:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 340:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 341:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 342:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Microseconds to time interval.
 344:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from microseconds to system ticks number.
 345:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded upward to the next tick boundary.
 346:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 347:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] usec      number of microseconds
 348:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of ticks.
 349:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 350:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @special
 351:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 352:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline sysinterval_t chTimeUS2I(time_usecs_t usec) {
 353:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   time_conv_t ticks;
 354:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 355:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   ticks = (((time_conv_t)usec * (time_conv_t)CH_CFG_ST_FREQUENCY) +
 356:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****            (time_conv_t)999999) / (time_conv_t)1000000;
 357:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 358:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgAssert(ticks <= (time_conv_t)TIME_MAX_INTERVAL,
 359:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               "conversion overflow");
 360:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 361:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (sysinterval_t)ticks;
 362:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 363:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 364:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 365:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time interval to seconds.
 366:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from system interval to seconds.
 367:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next second boundary.
 368:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 369:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 370:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of seconds.
 371:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 372:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @special
 373:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 374:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline time_secs_t chTimeI2S(sysinterval_t interval) {
 375:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   time_conv_t secs;
 376:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 377:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   secs = ((time_conv_t)interval +
 378:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY -
 379:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****           (time_conv_t)1) / (time_conv_t)CH_CFG_ST_FREQUENCY;
 380:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 381:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgAssert(secs < (time_conv_t)((time_secs_t)-1),
 382:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               "conversion overflow");
 383:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 384:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (time_secs_t)secs;
 385:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 386:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 387:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 388:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time interval to milliseconds.
 389:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from system interval to milliseconds.
 390:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next millisecond boundary.
 391:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 392:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 393:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of milliseconds.
 394:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 395:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @special
 396:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 397:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline time_msecs_t chTimeI2MS(sysinterval_t interval) {
 398:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   time_conv_t msecs;
 399:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 400:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   msecs = (((time_conv_t)interval * (time_conv_t)1000) +
 401:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 402:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 403:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 404:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgAssert(msecs < (time_conv_t)((time_msecs_t)-1),
 405:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               "conversion overflow");
 406:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 407:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (time_msecs_t)msecs;
 408:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 409:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 410:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 411:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Time interval to microseconds.
 412:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @details Converts from system interval to microseconds.
 413:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    The result is rounded up to the next microsecond boundary.
 414:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 415:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval in ticks
 416:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The number of microseconds.
 417:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 418:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @special
 419:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 420:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline time_usecs_t chTimeI2US(sysinterval_t interval) {
 421:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   time_conv_t usecs;
 422:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 423:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   usecs = (((time_conv_t)interval * (time_conv_t)1000000) +
 424:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****            (time_conv_t)CH_CFG_ST_FREQUENCY - (time_conv_t)1) /
 425:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****           (time_conv_t)CH_CFG_ST_FREQUENCY;
 426:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 427:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgAssert(usecs <= (time_conv_t)((time_usecs_t)-1),
 428:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****               "conversion overflow");
 429:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (time_usecs_t)usecs;
 431:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 432:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 433:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 434:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Adds an interval to a system time returning a system time.
 435:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 436:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] systime   base system time
 437:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] interval  interval to be added
 438:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The new system time.
 439:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 440:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @xclass
 441:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 442:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline systime_t chTimeAddX(systime_t systime,
 443:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                                    sysinterval_t interval) {
 444:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 445:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #if CH_CFG_ST_RESOLUTION != CH_CFG_INTERVALS_SIZE
 446:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   chDbgCheck(interval <= (sysinterval_t)TIME_MAX_SYSTIME);
 447:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** #endif
 448:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 449:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return systime + (systime_t)interval;
 450:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 451:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 452:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 453:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Subtracts two system times returning an interval.
 454:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 455:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] start     first system time
 456:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] end       second system time
 457:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @return              The interval representing the time difference.
 458:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 459:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @xclass
 460:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 461:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline sysinterval_t chTimeDiffX(systime_t start, systime_t end) {
 462:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 463:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   /*lint -save -e9033 [10.8] This cast is required by the operation, it is
 464:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****     known that the destination type can be wider.*/
 465:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (sysinterval_t)((systime_t)(end - start));
 1308               		.loc 6 465 0
 1309 000c C81B      		sub r28,r24
 1310 000e D90B      		sbc r29,r25
 1311               	.LVL92:
 1312               	.LBE376:
 1313               	.LBE375:
 678:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   sysinterval_t interval;
 679:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 680:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 681:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   interval = chTimeDiffX(chVTGetSystemTimeX(), time);
 682:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (likely(interval > (sysinterval_t)0)) {
 1314               		.loc 1 682 0
 1315 0010 01F0      		breq .L31
 1316               	.LVL93:
 1317               	.LBB378:
 1318               	.LBB377:
 1319               		.loc 6 465 0
 1320 0012 AE01      		movw r20,r28
 1321 0014 70E0      		ldi r23,0
 1322 0016 60E0      		ldi r22,0
 1323               	.LBE377:
 1324               	.LBE378:
 1325               	.LBB379:
 1326               	.LBB380:
 1327               		.loc 4 451 0
 1328 0018 88E0      		ldi r24,lo8(8)
 1329 001a 0E94 0000 		call chSchGoSleepTimeoutS
 1330               	.LVL94:
 1331               	.L31:
 1332               	.LBE380:
 1333               	.LBE379:
 1334               	.LBB381:
 1335               	.LBB382:
 1336               	.LBB383:
 1337               	.LBB384:
 1338               		.loc 3 440 0
 1339               	/* #APP */
 1340               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1341 001e 7894      		sei
 1342               	 ;  0 "" 2
 1343               	/* epilogue start */
 1344               	/* #NOAPP */
 1345               	.LBE384:
 1346               	.LBE383:
 1347               	.LBE382:
 1348               	.LBE381:
 683:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chThdSleepS(interval);
 684:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 685:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 686:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1349               		.loc 1 686 0
 1350 0020 DF91      		pop r29
 1351 0022 CF91      		pop r28
 1352 0024 0895      		ret
 1353               		.cfi_endproc
 1354               	.LFE210:
 1356               		.section	.text.chThdSleepUntilWindowed,"ax",@progbits
 1357               	.global	chThdSleepUntilWindowed
 1359               	chThdSleepUntilWindowed:
 1360               	.LFB211:
 687:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 688:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 689:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Suspends the invoking thread until the system time arrives to the
 690:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          specified value.
 691:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    The system time is assumed to be between @p prev and @p next
 692:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          else the call is assumed to have been called outside the
 693:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          allowed time interval, in this case no sleep is performed.
 694:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @see     chThdSleepUntil()
 695:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 696:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] prev      absolute system time of the previous deadline
 697:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] next      absolute system time of the next deadline
 698:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              the @p next parameter
 699:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 700:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 701:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 702:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** systime_t chThdSleepUntilWindowed(systime_t prev, systime_t next) {
 1361               		.loc 1 702 0
 1362               		.cfi_startproc
 1363               	.LVL95:
 1364 0000 0F93      		push r16
 1365               	.LCFI23:
 1366               		.cfi_def_cfa_offset 3
 1367               		.cfi_offset 16, -2
 1368 0002 1F93      		push r17
 1369               	.LCFI24:
 1370               		.cfi_def_cfa_offset 4
 1371               		.cfi_offset 17, -3
 1372 0004 CF93      		push r28
 1373               	.LCFI25:
 1374               		.cfi_def_cfa_offset 5
 1375               		.cfi_offset 28, -4
 1376 0006 DF93      		push r29
 1377               	.LCFI26:
 1378               		.cfi_def_cfa_offset 6
 1379               		.cfi_offset 29, -5
 1380               	/* prologue: function */
 1381               	/* frame size = 0 */
 1382               	/* stack size = 4 */
 1383               	.L__stack_usage = 4
 1384 0008 8C01      		movw r16,r24
 1385 000a EB01      		movw r28,r22
 1386               	.LBB385:
 1387               	.LBB386:
 1388               	.LBB387:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1389               		.loc 3 430 0
 1390               	/* #APP */
 1391               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1392 000c F894      		cli
 1393               	 ;  0 "" 2
 1394               	/* #NOAPP */
 1395               	.LBE387:
 1396               	.LBE386:
 1397               	.LBE385:
 1398               	.LBB388:
 1399               	.LBB389:
 1400               	.LBB390:
 1401               		.loc 5 113 0
 1402 000e 0E94 0000 		call stGetCounter
 1403               	.LVL96:
 1404               	.LBE390:
 1405               	.LBE389:
 1406               	.LBE388:
 1407               	.LBB391:
 1408               	.LBB392:
 466:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   /*lint -restore*/
 467:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** }
 468:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 469:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** /**
 470:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @brief   Checks if the specified time is within the specified time range.
 471:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @note    When start==end then the function returns always false because the
 472:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *          time window has zero size.
 473:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 474:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] time      the time to be verified
 475:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] start     the start of the time window (inclusive)
 476:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @param[in] end       the end of the time window (non inclusive)
 477:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @retval true         if the current time is within the specified
 478:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *                      time window.
 479:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @retval false        if the current time is not within the specified
 480:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *                      time window.
 481:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  *
 482:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  * @xclass
 483:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****  */
 484:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** static inline bool chTimeIsInRangeX(systime_t time,
 485:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                                     systime_t start,
 486:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                                     systime_t end) {
 487:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h **** 
 488:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   return (bool)((systime_t)((systime_t)time - (systime_t)start) <
 489:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1409               		.loc 6 489 0
 1410 0012 AE01      		movw r20,r28
 1411 0014 401B      		sub r20,r16
 1412 0016 510B      		sbc r21,r17
 488:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****                 (systime_t)((systime_t)end - (systime_t)start));
 1413               		.loc 6 488 0
 1414 0018 9C01      		movw r18,r24
 1415 001a 201B      		sub r18,r16
 1416 001c 310B      		sbc r19,r17
 1417               	.LBE392:
 1418               	.LBE391:
 703:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   systime_t time;
 704:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 705:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 706:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   time = chVTGetSystemTimeX();
 707:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (likely(chTimeIsInRangeX(time, prev, next))) {
 1419               		.loc 1 707 0
 1420 001e 2417      		cp r18,r20
 1421 0020 3507      		cpc r19,r21
 1422 0022 00F4      		brsh .L36
 1423               	.LBB393:
 1424               	.LBB394:
 465:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chtime.h ****   /*lint -restore*/
 1425               		.loc 6 465 0
 1426 0024 AE01      		movw r20,r28
 1427 0026 481B      		sub r20,r24
 1428 0028 590B      		sbc r21,r25
 1429 002a 70E0      		ldi r23,0
 1430 002c 60E0      		ldi r22,0
 1431               	.LBE394:
 1432               	.LBE393:
 1433               	.LBB395:
 1434               	.LBB396:
 1435               		.loc 4 451 0
 1436 002e 88E0      		ldi r24,lo8(8)
 1437 0030 0E94 0000 		call chSchGoSleepTimeoutS
 1438               	.LVL97:
 1439               	.L36:
 1440               	.LBE396:
 1441               	.LBE395:
 1442               	.LBB397:
 1443               	.LBB398:
 1444               	.LBB399:
 1445               	.LBB400:
 1446               		.loc 3 440 0
 1447               	/* #APP */
 1448               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1449 0034 7894      		sei
 1450               	 ;  0 "" 2
 1451               	/* #NOAPP */
 1452               	.LBE400:
 1453               	.LBE399:
 1454               	.LBE398:
 1455               	.LBE397:
 708:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chThdSleepS(chTimeDiffX(time, next));
 709:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 710:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 711:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 712:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return next;
 713:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1456               		.loc 1 713 0
 1457 0036 CE01      		movw r24,r28
 1458               	/* epilogue start */
 1459 0038 DF91      		pop r29
 1460 003a CF91      		pop r28
 1461               	.LVL98:
 1462 003c 1F91      		pop r17
 1463 003e 0F91      		pop r16
 1464               	.LVL99:
 1465 0040 0895      		ret
 1466               		.cfi_endproc
 1467               	.LFE211:
 1469               		.section	.text.chThdYield,"ax",@progbits
 1470               	.global	chThdYield
 1472               	chThdYield:
 1473               	.LFB212:
 714:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 715:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 716:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Yields the time slot.
 717:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details Yields the CPU control to the next thread in the ready list with
 718:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          equal priority, if any.
 719:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 720:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 721:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 722:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdYield(void) {
 1474               		.loc 1 722 0
 1475               		.cfi_startproc
 1476               	/* prologue: function */
 1477               	/* frame size = 0 */
 1478               	/* stack size = 0 */
 1479               	.L__stack_usage = 0
 1480               	.LBB401:
 1481               	.LBB402:
 1482               	.LBB403:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1483               		.loc 3 430 0
 1484               	/* #APP */
 1485               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1486 0000 F894      		cli
 1487               	 ;  0 "" 2
 1488               	/* #NOAPP */
 1489               	.LBE403:
 1490               	.LBE402:
 1491               	.LBE401:
 723:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 724:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 725:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchDoYieldS();
 1492               		.loc 1 725 0
 1493 0002 0E94 0000 		call chSchDoYieldS
 1494               	.LVL100:
 1495               	.LBB404:
 1496               	.LBB405:
 1497               	.LBB406:
 1498               	.LBB407:
 1499               		.loc 3 440 0
 1500               	/* #APP */
 1501               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1502 0006 7894      		sei
 1503               	 ;  0 "" 2
 1504               	/* epilogue start */
 1505               	/* #NOAPP */
 1506               	.LBE407:
 1507               	.LBE406:
 1508               	.LBE405:
 1509               	.LBE404:
 726:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 727:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1510               		.loc 1 727 0
 1511 0008 0895      		ret
 1512               		.cfi_endproc
 1513               	.LFE212:
 1515               		.section	.text.chThdSuspendS,"ax",@progbits
 1516               	.global	chThdSuspendS
 1518               	chThdSuspendS:
 1519               	.LFB213:
 728:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 729:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 730:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 731:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 732:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          context.
 733:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 734:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 735:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The wake up message.
 736:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 737:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @sclass
 738:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 739:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** msg_t chThdSuspendS(thread_reference_t *trp) {
 1520               		.loc 1 739 0
 1521               		.cfi_startproc
 1522               	.LVL101:
 1523 0000 CF93      		push r28
 1524               	.LCFI27:
 1525               		.cfi_def_cfa_offset 3
 1526               		.cfi_offset 28, -2
 1527 0002 DF93      		push r29
 1528               	.LCFI28:
 1529               		.cfi_def_cfa_offset 4
 1530               		.cfi_offset 29, -3
 1531               	/* prologue: function */
 1532               	/* frame size = 0 */
 1533               	/* stack size = 2 */
 1534               	.L__stack_usage = 2
 1535               	.LBB408:
 1536               	.LBB409:
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 1537               		.loc 4 343 0
 1538 0004 C0E0      		ldi r28,lo8(ch0)
 1539 0006 D0E0      		ldi r29,hi8(ch0)
 1540 0008 ED81      		ldd r30,Y+5
 1541 000a FE81      		ldd r31,Y+6
 1542               	.LBE409:
 1543               	.LBE408:
 740:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 741:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 742:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(*trp == NULL, "not NULL");
 743:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 744:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   *trp = tp;
 1544               		.loc 1 744 0
 1545 000c DC01      		movw r26,r24
 1546 000e ED93      		st X+,r30
 1547 0010 FC93      		st X,r31
 745:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 1548               		.loc 1 745 0
 1549 0012 938B      		std Z+19,r25
 1550 0014 828B      		std Z+18,r24
 746:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSchGoSleepS(CH_STATE_SUSPENDED);
 1551               		.loc 1 746 0
 1552 0016 83E0      		ldi r24,lo8(3)
 1553               	.LVL102:
 1554 0018 0E94 0000 		call chSchGoSleepS
 1555               	.LVL103:
 747:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 748:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return chThdGetSelfX()->u.rdymsg;
 1556               		.loc 1 748 0
 1557 001c ED81      		ldd r30,Y+5
 1558 001e FE81      		ldd r31,Y+6
 749:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1559               		.loc 1 749 0
 1560 0020 8289      		ldd r24,Z+18
 1561 0022 9389      		ldd r25,Z+19
 1562               	/* epilogue start */
 1563 0024 DF91      		pop r29
 1564 0026 CF91      		pop r28
 1565 0028 0895      		ret
 1566               		.cfi_endproc
 1567               	.LFE213:
 1569               		.section	.text.chThdSuspendTimeoutS,"ax",@progbits
 1570               	.global	chThdSuspendTimeoutS
 1572               	chThdSuspendTimeoutS:
 1573               	.LFB214:
 750:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 751:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 752:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 753:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 754:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          context.
 755:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 756:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 757:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] timeout   the timeout in system ticks, the special values are
 758:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      handled as follow:
 759:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 760:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        state.
 761:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE the thread is not suspended and
 762:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 763:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        occurred.
 764:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      .
 765:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The wake up message.
 766:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @retval MSG_TIMEOUT  if the operation timed out.
 767:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 768:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @sclass
 769:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 770:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** msg_t chThdSuspendTimeoutS(thread_reference_t *trp, sysinterval_t timeout) {
 1574               		.loc 1 770 0
 1575               		.cfi_startproc
 1576               	.LVL104:
 1577               	/* prologue: function */
 1578               	/* frame size = 0 */
 1579               	/* stack size = 0 */
 1580               	.L__stack_usage = 0
 1581               	.LBB410:
 1582               	.LBB411:
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 1583               		.loc 4 343 0
 1584 0000 E091 0000 		lds r30,ch0+5
 1585 0004 F091 0000 		lds r31,ch0+5+1
 1586               	.LBE411:
 1587               	.LBE410:
 771:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *tp = chThdGetSelfX();
 772:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 773:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chDbgAssert(*trp == NULL, "not NULL");
 774:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 775:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (unlikely(TIME_IMMEDIATE == timeout)) {
 1588               		.loc 1 775 0
 1589 0008 4115      		cp r20,__zero_reg__
 1590 000a 5105      		cpc r21,__zero_reg__
 1591 000c 6105      		cpc r22,__zero_reg__
 1592 000e 7105      		cpc r23,__zero_reg__
 1593 0010 01F0      		breq .L40
 776:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 777:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 778:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 779:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   *trp = tp;
 1594               		.loc 1 779 0
 1595 0012 DC01      		movw r26,r24
 1596 0014 ED93      		st X+,r30
 1597 0016 FC93      		st X,r31
 780:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   tp->u.wttrp = trp;
 1598               		.loc 1 780 0
 1599 0018 938B      		std Z+19,r25
 1600 001a 828B      		std Z+18,r24
 781:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 782:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return chSchGoSleepTimeoutS(CH_STATE_SUSPENDED, timeout);
 1601               		.loc 1 782 0
 1602 001c 83E0      		ldi r24,lo8(3)
 1603               	.LVL105:
 1604 001e 0C94 0000 		jmp chSchGoSleepTimeoutS
 1605               	.LVL106:
 1606               	.L40:
 783:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1607               		.loc 1 783 0
 1608 0022 8FEF      		ldi r24,lo8(-1)
 1609 0024 9FEF      		ldi r25,lo8(-1)
 1610               	.LVL107:
 1611               	/* epilogue start */
 1612 0026 0895      		ret
 1613               		.cfi_endproc
 1614               	.LFE214:
 1616               		.section	.text.chThdResumeI,"ax",@progbits
 1617               	.global	chThdResumeI
 1619               	chThdResumeI:
 1620               	.LFB215:
 784:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 785:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 786:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 787:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    This function must not reschedule because it can be called from
 788:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          ISR context.
 789:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 790:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 791:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 792:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 793:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 794:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 795:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdResumeI(thread_reference_t *trp, msg_t msg) {
 1621               		.loc 1 795 0
 1622               		.cfi_startproc
 1623               	.LVL108:
 1624               	/* prologue: function */
 1625               	/* frame size = 0 */
 1626               	/* stack size = 0 */
 1627               	.L__stack_usage = 0
 796:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 797:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (*trp != NULL) {
 1628               		.loc 1 797 0
 1629 0000 DC01      		movw r26,r24
 1630 0002 ED91      		ld r30,X+
 1631 0004 FC91      		ld r31,X
 1632 0006 1197      		sbiw r26,1
 1633 0008 3097      		sbiw r30,0
 1634 000a 01F0      		breq .L41
 1635               	.LVL109:
 1636               	.LBB412:
 798:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 799:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 800:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chDbgAssert(tp->state == CH_STATE_SUSPENDED, "not CH_STATE_SUSPENDED");
 801:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 802:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     *trp = NULL;
 1637               		.loc 1 802 0
 1638 000c 1D92      		st X+,__zero_reg__
 1639 000e 1C92      		st X,__zero_reg__
 803:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     tp->u.rdymsg = msg;
 1640               		.loc 1 803 0
 1641 0010 738B      		std Z+19,r23
 1642 0012 628B      		std Z+18,r22
 804:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     (void) chSchReadyI(tp);
 1643               		.loc 1 804 0
 1644 0014 CF01      		movw r24,r30
 1645               	.LVL110:
 1646 0016 0C94 0000 		jmp chSchReadyI
 1647               	.LVL111:
 1648               	.L41:
 1649               	/* epilogue start */
 1650               	.LBE412:
 805:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 806:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1651               		.loc 1 806 0
 1652 001a 0895      		ret
 1653               		.cfi_endproc
 1654               	.LFE215:
 1656               		.section	.text.chThdResumeS,"ax",@progbits
 1657               	.global	chThdResumeS
 1659               	chThdResumeS:
 1660               	.LFB216:
 807:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 808:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 809:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 810:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 811:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          context.
 812:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 813:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 814:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 815:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 816:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 817:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 818:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdResumeS(thread_reference_t *trp, msg_t msg) {
 1661               		.loc 1 818 0
 1662               		.cfi_startproc
 1663               	.LVL112:
 1664               	/* prologue: function */
 1665               	/* frame size = 0 */
 1666               	/* stack size = 0 */
 1667               	.L__stack_usage = 0
 819:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 820:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (*trp != NULL) {
 1668               		.loc 1 820 0
 1669 0000 FC01      		movw r30,r24
 1670 0002 2081      		ld r18,Z
 1671 0004 3181      		ldd r19,Z+1
 1672 0006 2115      		cp r18,__zero_reg__
 1673 0008 3105      		cpc r19,__zero_reg__
 1674 000a 01F0      		breq .L43
 1675               	.LVL113:
 1676               	.LBB413:
 821:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 822:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 823:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chDbgAssert(tp->state == CH_STATE_SUSPENDED, "not CH_STATE_SUSPENDED");
 824:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 825:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     *trp = NULL;
 1677               		.loc 1 825 0
 1678 000c 1182      		std Z+1,__zero_reg__
 1679 000e 1082      		st Z,__zero_reg__
 826:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chSchWakeupS(tp, msg);
 1680               		.loc 1 826 0
 1681 0010 C901      		movw r24,r18
 1682               	.LVL114:
 1683 0012 0C94 0000 		jmp chSchWakeupS
 1684               	.LVL115:
 1685               	.L43:
 1686               	/* epilogue start */
 1687               	.LBE413:
 827:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 828:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1688               		.loc 1 828 0
 1689 0016 0895      		ret
 1690               		.cfi_endproc
 1691               	.LFE216:
 1693               		.section	.text.chThdResume,"ax",@progbits
 1694               	.global	chThdResume
 1696               	chThdResume:
 1697               	.LFB217:
 829:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 830:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 831:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Wakes up a thread waiting on a thread reference object.
 832:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @note    This function must reschedule, it can only be called from thread
 833:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          context.
 834:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 835:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] trp       a pointer to a thread reference object
 836:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 837:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 838:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @api
 839:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 840:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdResume(thread_reference_t *trp, msg_t msg) {
 1698               		.loc 1 840 0
 1699               		.cfi_startproc
 1700               	.LVL116:
 1701               	/* prologue: function */
 1702               	/* frame size = 0 */
 1703               	/* stack size = 0 */
 1704               	.L__stack_usage = 0
 1705 0000 FC01      		movw r30,r24
 1706               	.LBB414:
 1707               	.LBB415:
 1708               	.LBB416:
 430:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h **** }
 1709               		.loc 3 430 0
 1710               	/* #APP */
 1711               	 ;  430 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1712 0002 F894      		cli
 1713               	 ;  0 "" 2
 1714               	.LVL117:
 1715               	/* #NOAPP */
 1716               	.LBE416:
 1717               	.LBE415:
 1718               	.LBE414:
 1719               	.LBB417:
 1720               	.LBB418:
 820:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     thread_t *tp = *trp;
 1721               		.loc 1 820 0
 1722 0004 8081      		ld r24,Z
 1723 0006 9181      		ldd r25,Z+1
 1724               	.LVL118:
 1725 0008 0097      		sbiw r24,0
 1726 000a 01F0      		breq .L46
 1727               	.LVL119:
 1728               	.LBB419:
 825:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chSchWakeupS(tp, msg);
 1729               		.loc 1 825 0
 1730 000c 1182      		std Z+1,__zero_reg__
 1731 000e 1082      		st Z,__zero_reg__
 826:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 1732               		.loc 1 826 0
 1733 0010 0E94 0000 		call chSchWakeupS
 1734               	.LVL120:
 1735               	.L46:
 1736               	.LBE419:
 1737               	.LBE418:
 1738               	.LBE417:
 1739               	.LBB420:
 1740               	.LBB421:
 1741               	.LBB422:
 1742               	.LBB423:
 1743               		.loc 3 440 0
 1744               	/* #APP */
 1745               	 ;  440 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/chcore.h" 1
 1746 0014 7894      		sei
 1747               	 ;  0 "" 2
 1748               	/* epilogue start */
 1749               	/* #NOAPP */
 1750               	.LBE423:
 1751               	.LBE422:
 1752               	.LBE421:
 1753               	.LBE420:
 841:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 842:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysLock();
 843:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chThdResumeS(trp, msg);
 844:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   chSysUnlock();
 845:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1754               		.loc 1 845 0
 1755 0016 0895      		ret
 1756               		.cfi_endproc
 1757               	.LFE217:
 1759               		.section	.text.chThdEnqueueTimeoutS,"ax",@progbits
 1760               	.global	chThdEnqueueTimeoutS
 1762               	chThdEnqueueTimeoutS:
 1763               	.LFB218:
 846:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 847:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 848:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Enqueues the caller thread on a threads queue object.
 849:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @details The caller thread is enqueued and put to sleep until it is
 850:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          dequeued or the specified timeouts expires.
 851:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 852:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 853:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] timeout   the timeout in system ticks, the special values are
 854:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      handled as follow:
 855:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 856:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        state.
 857:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 858:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 859:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                        occurred.
 860:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      .
 861:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @return              The message from @p osalQueueWakeupOneI() or
 862:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      @p osalQueueWakeupAllI() functions.
 863:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 864:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      specified timeout or if the function has been
 865:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 866:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *                      specification.
 867:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 868:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @sclass
 869:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 870:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** msg_t chThdEnqueueTimeoutS(threads_queue_t *tqp, sysinterval_t timeout) {
 1764               		.loc 1 870 0
 1765               		.cfi_startproc
 1766               	.LVL121:
 1767 0000 CF93      		push r28
 1768               	.LCFI29:
 1769               		.cfi_def_cfa_offset 3
 1770               		.cfi_offset 28, -2
 1771 0002 DF93      		push r29
 1772               	.LCFI30:
 1773               		.cfi_def_cfa_offset 4
 1774               		.cfi_offset 29, -3
 1775               	/* prologue: function */
 1776               	/* frame size = 0 */
 1777               	/* stack size = 2 */
 1778               	.L__stack_usage = 2
 1779               	.LBB424:
 1780               	.LBB425:
 343:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 1781               		.loc 4 343 0
 1782 0004 E091 0000 		lds r30,ch0+5
 1783 0008 F091 0000 		lds r31,ch0+5+1
 1784               	.LBE425:
 1785               	.LBE424:
 871:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   thread_t *currtp = chThdGetSelfX();
 872:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 873:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (unlikely(TIME_IMMEDIATE == timeout)) {
 1786               		.loc 1 873 0
 1787 000c 4115      		cp r20,__zero_reg__
 1788 000e 5105      		cpc r21,__zero_reg__
 1789 0010 6105      		cpc r22,__zero_reg__
 1790 0012 7105      		cpc r23,__zero_reg__
 1791 0014 01F0      		breq .L51
 1792               	.LVL122:
 1793               	.LBB426:
 1794               	.LBB427:
 264:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev       = qp->prev;
 1795               		.loc 2 264 0
 1796 0016 9183      		std Z+1,r25
 1797 0018 8083      		st Z,r24
 265:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   p->prev->next = p;
 1798               		.loc 2 265 0
 1799 001a EC01      		movw r28,r24
 1800 001c AA81      		ldd r26,Y+2
 1801 001e BB81      		ldd r27,Y+3
 1802 0020 B383      		std Z+3,r27
 1803 0022 A283      		std Z+2,r26
 266:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->prev      = p;
 1804               		.loc 2 266 0
 1805 0024 ED93      		st X+,r30
 1806 0026 FC93      		st X,r31
 267:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 1807               		.loc 2 267 0
 1808 0028 FB83      		std Y+3,r31
 1809 002a EA83      		std Y+2,r30
 1810               	.LVL123:
 1811               	.LBE427:
 1812               	.LBE426:
 874:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     return MSG_TIMEOUT;
 875:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 876:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 877:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   ch_queue_insert(&tqp->queue, (ch_queue_t *)currtp);
 878:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 879:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   return chSchGoSleepTimeoutS(CH_STATE_QUEUED, timeout);
 1813               		.loc 1 879 0
 1814 002c 84E0      		ldi r24,lo8(4)
 1815               	.LVL124:
 1816               	/* epilogue start */
 880:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1817               		.loc 1 880 0
 1818 002e DF91      		pop r29
 1819 0030 CF91      		pop r28
 1820               	.LVL125:
 879:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1821               		.loc 1 879 0
 1822 0032 0C94 0000 		jmp chSchGoSleepTimeoutS
 1823               	.LVL126:
 1824               	.L51:
 1825               		.loc 1 880 0
 1826 0036 8FEF      		ldi r24,lo8(-1)
 1827 0038 9FEF      		ldi r25,lo8(-1)
 1828               	.LVL127:
 1829               	/* epilogue start */
 1830 003a DF91      		pop r29
 1831 003c CF91      		pop r28
 1832 003e 0895      		ret
 1833               		.cfi_endproc
 1834               	.LFE218:
 1836               		.section	.text.chThdDequeueNextI,"ax",@progbits
 1837               	.global	chThdDequeueNextI
 1839               	chThdDequeueNextI:
 1840               	.LFB219:
 881:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 882:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 883:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Dequeues and wakes up one thread from the threads queue object,
 884:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *          if any.
 885:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 886:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 887:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 888:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 889:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 890:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 891:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 1841               		.loc 1 891 0
 1842               		.cfi_startproc
 1843               	.LVL128:
 1844 0000 CF93      		push r28
 1845               	.LCFI31:
 1846               		.cfi_def_cfa_offset 3
 1847               		.cfi_offset 28, -2
 1848 0002 DF93      		push r29
 1849               	.LCFI32:
 1850               		.cfi_def_cfa_offset 4
 1851               		.cfi_offset 29, -3
 1852               	/* prologue: function */
 1853               	/* frame size = 0 */
 1854               	/* stack size = 2 */
 1855               	.L__stack_usage = 2
 1856 0004 FC01      		movw r30,r24
 1857               	.LVL129:
 1858               	.LBB428:
 1859               	.LBB429:
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 1860               		.loc 2 251 0
 1861 0006 8081      		ld r24,Z
 1862 0008 9181      		ldd r25,Z+1
 1863               	.LVL130:
 1864               	.LBE429:
 1865               	.LBE428:
 892:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 893:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   if (ch_queue_notempty(&tqp->queue)) {
 1866               		.loc 1 893 0
 1867 000a E817      		cp r30,r24
 1868 000c F907      		cpc r31,r25
 1869 000e 01F0      		breq .L52
 1870               	.LVL131:
 1871               	.LBB430:
 1872               	.LBB431:
 1873               	.LBB432:
 1874               	.LBB433:
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->next->prev = qp;
 1875               		.loc 2 283 0
 1876 0010 EC01      		movw r28,r24
 1877 0012 A881      		ld r26,Y
 1878 0014 B981      		ldd r27,Y+1
 1879 0016 B183      		std Z+1,r27
 1880 0018 A083      		st Z,r26
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 1881               		.loc 2 284 0
 1882 001a 1396      		adiw r26,2+1
 1883 001c FC93      		st X,r31
 1884 001e EE93      		st -X,r30
 1885 0020 1297      		sbiw r26,2
 1886               	.LVL132:
 1887               	.LBE433:
 1888               	.LBE432:
 452:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 453:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 454:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 455:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Initializes a threads queue object.
 456:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 457:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 458:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 459:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @init
 460:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 461:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline void chThdQueueObjectInit(threads_queue_t *tqp) {
 462:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 463:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   ch_queue_init(&tqp->queue);
 464:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 465:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 466:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 467:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Evaluates to @p true if the specified queue is empty.
 468:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 469:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[out] tqp      pointer to the threads queue object
 470:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @return              The queue status.
 471:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @retval false        if the queue is not empty.
 472:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @retval true         if the queue is empty.
 473:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 474:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @iclass
 475:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 476:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline bool chThdQueueIsEmptyI(threads_queue_t *tqp) {
 477:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 478:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   chDbgCheckClassI();
 479:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 480:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   return ch_queue_isempty(&tqp->queue);
 481:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** }
 482:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 483:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** /**
 484:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @brief   Dequeues and wakes up one thread from the threads queue object.
 485:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @details Dequeues one thread from the queue without checking if the queue
 486:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *          is empty.
 487:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @pre     The queue must contain at least an object.
 488:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 489:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] tqp       pointer to the threads queue object
 490:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @param[in] msg       the message code
 491:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  *
 492:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  * @iclass
 493:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****  */
 494:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** static inline void chThdDoDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 495:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   thread_t *tp;
 496:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 497:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   chDbgAssert(ch_queue_notempty(&tqp->queue), "empty queue");
 498:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 499:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   tp = threadref(ch_queue_fifo_remove(&tqp->queue));
 500:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 501:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   chDbgAssert(tp->state == CH_STATE_QUEUED, "invalid state");
 502:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h **** 
 503:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   tp->u.rdymsg = msg;
 1889               		.loc 4 503 0
 1890 0022 7B8B      		std Y+19,r23
 1891 0024 6A8B      		std Y+18,r22
 1892               	/* epilogue start */
 1893               	.LBE431:
 1894               	.LBE430:
 894:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 895:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 896:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 1895               		.loc 1 896 0
 1896 0026 DF91      		pop r29
 1897 0028 CF91      		pop r28
 1898               	.LBB435:
 1899               	.LBB434:
 504:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 1900               		.loc 4 504 0
 1901 002a 0C94 0000 		jmp chSchReadyI
 1902               	.LVL133:
 1903               	.L52:
 1904               	/* epilogue start */
 1905               	.LBE434:
 1906               	.LBE435:
 1907               		.loc 1 896 0
 1908 002e DF91      		pop r29
 1909 0030 CF91      		pop r28
 1910 0032 0895      		ret
 1911               		.cfi_endproc
 1912               	.LFE219:
 1914               		.section	.text.chThdDequeueAllI,"ax",@progbits
 1915               	.global	chThdDequeueAllI
 1917               	chThdDequeueAllI:
 1918               	.LFB220:
 897:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 898:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** /**
 899:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @brief   Dequeues and wakes up all threads from the threads queue object.
 900:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 901:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] tqp       pointer to the threads queue object
 902:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @param[in] msg       the message code
 903:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  *
 904:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  * @iclass
 905:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****  */
 906:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** void chThdDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 1919               		.loc 1 906 0
 1920               		.cfi_startproc
 1921               	.LVL134:
 1922 0000 0F93      		push r16
 1923               	.LCFI33:
 1924               		.cfi_def_cfa_offset 3
 1925               		.cfi_offset 16, -2
 1926 0002 1F93      		push r17
 1927               	.LCFI34:
 1928               		.cfi_def_cfa_offset 4
 1929               		.cfi_offset 17, -3
 1930 0004 CF93      		push r28
 1931               	.LCFI35:
 1932               		.cfi_def_cfa_offset 5
 1933               		.cfi_offset 28, -4
 1934 0006 DF93      		push r29
 1935               	.LCFI36:
 1936               		.cfi_def_cfa_offset 6
 1937               		.cfi_offset 29, -5
 1938               	/* prologue: function */
 1939               	/* frame size = 0 */
 1940               	/* stack size = 4 */
 1941               	.L__stack_usage = 4
 1942 0008 EC01      		movw r28,r24
 1943 000a 8B01      		movw r16,r22
 1944               	.LVL135:
 1945               	.LBB436:
 1946               	.LBB437:
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 1947               		.loc 2 251 0
 1948 000c 8881      		ld r24,Y
 1949 000e 9981      		ldd r25,Y+1
 1950               	.LVL136:
 1951               	.LBE437:
 1952               	.LBE436:
 907:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** 
 908:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   while (ch_queue_notempty(&tqp->queue)) {
 1953               		.loc 1 908 0
 1954 0010 C817      		cp r28,r24
 1955 0012 D907      		cpc r29,r25
 1956 0014 01F0      		breq .L54
 1957               	.LVL137:
 1958               	.L56:
 1959               	.LBB439:
 1960               	.LBB440:
 1961               	.LBB441:
 1962               	.LBB442:
 283:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h ****   qp->next->prev = qp;
 1963               		.loc 2 283 0
 1964 0016 DC01      		movw r26,r24
 1965 0018 ED91      		ld r30,X+
 1966 001a FC91      		ld r31,X
 1967 001c 1197      		sbiw r26,1
 1968 001e F983      		std Y+1,r31
 1969 0020 E883      		st Y,r30
 284:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** 
 1970               		.loc 2 284 0
 1971 0022 D383      		std Z+3,r29
 1972 0024 C283      		std Z+2,r28
 1973               	.LVL138:
 1974               	.LBE442:
 1975               	.LBE441:
 503:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chthreads.h ****   (void) chSchReadyI(tp);
 1976               		.loc 4 503 0
 1977 0026 5396      		adiw r26,18+1
 1978 0028 1C93      		st X,r17
 1979 002a 0E93      		st -X,r16
 1980 002c 5297      		sbiw r26,18
 1981               		.loc 4 504 0
 1982 002e 0E94 0000 		call chSchReadyI
 1983               	.LVL139:
 1984               	.LBE440:
 1985               	.LBE439:
 1986               	.LBB443:
 1987               	.LBB438:
 251:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chlists.h **** }
 1988               		.loc 2 251 0
 1989 0032 8881      		ld r24,Y
 1990 0034 9981      		ldd r25,Y+1
 1991               	.LVL140:
 1992               	.LBE438:
 1993               	.LBE443:
 1994               		.loc 1 908 0
 1995 0036 8C17      		cp r24,r28
 1996 0038 9D07      		cpc r25,r29
 1997 003a 01F4      		brne .L56
 1998               	.LVL141:
 1999               	.L54:
 2000               	/* epilogue start */
 909:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****     chThdDoDequeueNextI(tqp, msg);
 910:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c ****   }
 911:/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/src/chthreads.c **** }
 2001               		.loc 1 911 0
 2002 003c DF91      		pop r29
 2003 003e CF91      		pop r28
 2004               	.LVL142:
 2005 0040 1F91      		pop r17
 2006 0042 0F91      		pop r16
 2007               	.LVL143:
 2008 0044 0895      		ret
 2009               		.cfi_endproc
 2010               	.LFE220:
 2012               		.text
 2013               	.Letext0:
 2014               		.file 7 "/usr/lib/gcc/avr/7.3.0/include/stddef.h"
 2015               		.file 8 "/usr/lib/avr/include/stdint.h"
 2016               		.file 9 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/common/ports/AVR/compilers/
 2017               		.file 10 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chearly.h"
 2018               		.file 11 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chobjects.h"
 2019               		.file 12 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chrfcu.h"
 2020               		.file 13 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chdebug.h"
 2021               		.file 14 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chsem.h"
 2022               		.file 15 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chmtx.h"
 2023               		.file 16 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chsys.h"
 2024               		.file 17 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chregistry.h"
 2025               		.file 18 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/oslib/include/chmemcore.h"
 2026               		.file 19 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chvt.h"
 2027               		.file 20 "/home/givaldo/Documents/ChibiStudio/chibios_stable-21.11.x/os/rt/include/chschd.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chthreads.c
     /tmp/ccKtMrxY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccKtMrxY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccKtMrxY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccKtMrxY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccKtMrxY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccKtMrxY.s:13     .text.__thd_object_init:0000000000000000 __thd_object_init
     /tmp/ccKtMrxY.s:128    .text.chThdCreateSuspendedI:0000000000000000 chThdCreateSuspendedI
     /tmp/ccKtMrxY.s:298    .text.chThdCreateSuspended:0000000000000000 chThdCreateSuspended
     /tmp/ccKtMrxY.s:346    .text.chThdCreateI:0000000000000000 chThdCreateI
     /tmp/ccKtMrxY.s:366    .text.chThdCreate:0000000000000000 chThdCreate
     /tmp/ccKtMrxY.s:435    .text.chThdCreateStatic:0000000000000000 chThdCreateStatic
     /tmp/ccKtMrxY.s:612    .text.chThdStart:0000000000000000 chThdStart
     /tmp/ccKtMrxY.s:674    .text.chThdAddRef:0000000000000000 chThdAddRef
     /tmp/ccKtMrxY.s:723    .text.chThdRelease:0000000000000000 chThdRelease
     /tmp/ccKtMrxY.s:822    .text.chThdExitS:0000000000000000 chThdExitS
     /tmp/ccKtMrxY.s:946    .text.chThdExit:0000000000000000 chThdExit
     /tmp/ccKtMrxY.s:976    .text.chThdWait:0000000000000000 chThdWait
     /tmp/ccKtMrxY.s:1083   .text.chThdSetPriority:0000000000000000 chThdSetPriority
     /tmp/ccKtMrxY.s:1160   .text.chThdTerminate:0000000000000000 chThdTerminate
     /tmp/ccKtMrxY.s:1209   .text.chThdSleep:0000000000000000 chThdSleep
     /tmp/ccKtMrxY.s:1265   .text.chThdSleepUntil:0000000000000000 chThdSleepUntil
     /tmp/ccKtMrxY.s:1359   .text.chThdSleepUntilWindowed:0000000000000000 chThdSleepUntilWindowed
     /tmp/ccKtMrxY.s:1472   .text.chThdYield:0000000000000000 chThdYield
     /tmp/ccKtMrxY.s:1518   .text.chThdSuspendS:0000000000000000 chThdSuspendS
     /tmp/ccKtMrxY.s:1572   .text.chThdSuspendTimeoutS:0000000000000000 chThdSuspendTimeoutS
     /tmp/ccKtMrxY.s:1619   .text.chThdResumeI:0000000000000000 chThdResumeI
     /tmp/ccKtMrxY.s:1659   .text.chThdResumeS:0000000000000000 chThdResumeS
     /tmp/ccKtMrxY.s:1696   .text.chThdResume:0000000000000000 chThdResume
     /tmp/ccKtMrxY.s:1762   .text.chThdEnqueueTimeoutS:0000000000000000 chThdEnqueueTimeoutS
     /tmp/ccKtMrxY.s:1839   .text.chThdDequeueNextI:0000000000000000 chThdDequeueNextI
     /tmp/ccKtMrxY.s:1917   .text.chThdDequeueAllI:0000000000000000 chThdDequeueAllI

UNDEFINED SYMBOLS
_port_thread_start
ch0
chSchReadyI
chSchWakeupS
chSchGoSleepS
chSchRescheduleS
chSchGoSleepTimeoutS
stGetCounter
chSchDoYieldS
__do_copy_data
